// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_8u_config4_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [26:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [26:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [26:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [26:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [26:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [26:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [26:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [26:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX_2;
reg   [31:0] sX_2;
reg   [31:0] pY_2;
reg   [31:0] sY_2;
reg   [15:0] kernel_data_V_1_1;
reg   [15:0] kernel_data_V_1_2;
reg   [15:0] kernel_data_V_1_4;
reg   [15:0] kernel_data_V_1_5;
reg   [15:0] kernel_data_V_1_7;
reg   [15:0] kernel_data_V_1_8;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_state2;
reg    res_V_data_0_V_blk_n;
wire    ap_CS_fsm_state4;
reg   [0:0] and_ln272_2_reg_1640;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [15:0] kernel_data_V_1_6_ret_reg_1540;
reg   [15:0] kernel_data_V_1_3_ret_reg_1548;
reg   [15:0] kernel_data_V_1_0_ret_reg_1555;
reg   [15:0] kernel_data_V_1_1_ret_reg_1562;
reg   [15:0] kernel_data_V_1_2_ret_reg_1570;
reg   [15:0] kernel_data_V_1_4_ret_reg_1579;
reg   [15:0] kernel_data_V_1_5_ret_reg_1587;
reg   [15:0] kernel_data_V_1_7_ret_reg_1596;
reg   [15:0] kernel_data_V_1_8_ret_reg_1602;
reg   [31:0] sX_2_load_reg_1608;
wire   [0:0] icmp_ln272_fu_327_p2;
reg   [0:0] icmp_ln272_reg_1613;
reg   [31:0] sY_2_load_reg_1618;
wire   [0:0] icmp_ln272_1_fu_337_p2;
reg   [0:0] icmp_ln272_1_reg_1623;
reg   [31:0] pY_2_load_reg_1628;
reg   [31:0] pX_2_load_reg_1634;
wire   [0:0] and_ln272_2_fu_395_p2;
wire   [11:0] add_ln78_fu_401_p2;
reg   [11:0] add_ln78_reg_1644;
wire   [23:0] zext_ln728_3_fu_466_p1;
reg   [23:0] zext_ln728_3_reg_1649;
wire    ap_CS_fsm_state3;
wire   [24:0] tmp_data_0_V_4_fu_470_p2;
reg   [24:0] tmp_data_0_V_4_reg_1654;
wire   [22:0] shl_ln728_4_fu_568_p3;
reg   [22:0] shl_ln728_4_reg_1659;
wire   [25:0] acc_2_V_fu_665_p2;
reg   [25:0] acc_2_V_reg_1664;
wire   [22:0] add_ln703_392_fu_678_p2;
reg   [22:0] add_ln703_392_reg_1669;
wire   [18:0] sub_ln1118_189_fu_695_p2;
reg   [18:0] sub_ln1118_189_reg_1674;
wire   [18:0] sub_ln1118_176_fu_712_p2;
reg   [18:0] sub_ln1118_176_reg_1679;
wire   [23:0] add_ln703_396_fu_780_p2;
reg   [23:0] add_ln703_396_reg_1684;
wire   [24:0] acc_4_V_fu_825_p2;
reg   [24:0] acc_4_V_reg_1689;
wire   [25:0] acc_5_V_fu_929_p2;
reg   [25:0] acc_5_V_reg_1694;
wire   [25:0] acc_6_V_fu_1055_p2;
reg   [25:0] acc_6_V_reg_1699;
wire   [25:0] acc_7_V_fu_1299_p2;
reg   [25:0] acc_7_V_reg_1704;
reg    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start;
wire    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_done;
wire    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_ready;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7;
wire   [15:0] call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8;
reg   [11:0] indvar_flatten6_reg_180;
reg    ap_block_state1;
wire    io_acc_block_signal_op257;
reg    ap_block_state4;
wire   [0:0] icmp_ln78_fu_1498_p2;
wire   [31:0] select_ln303_fu_1478_p3;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_198_p4;
wire   [0:0] icmp_ln293_fu_1411_p2;
wire   [0:0] icmp_ln297_fu_1457_p2;
wire   [31:0] add_ln306_fu_1416_p2;
wire   [31:0] select_ln308_fu_1432_p3;
wire   [31:0] add_ln301_fu_1462_p2;
wire   [30:0] tmp_1_fu_347_p4;
wire   [30:0] tmp_2_fu_367_p4;
wire   [0:0] icmp_ln272_2_fu_357_p2;
wire   [0:0] icmp_ln272_3_fu_377_p2;
wire   [0:0] and_ln272_1_fu_389_p2;
wire   [0:0] and_ln272_fu_383_p2;
wire   [16:0] shl_ln_fu_407_p3;
wire   [17:0] zext_ln728_fu_414_p1;
wire  signed [17:0] add_ln703_fu_418_p2;
wire  signed [22:0] grp_fu_1506_p3;
wire   [20:0] shl_ln1_fu_437_p3;
wire   [21:0] zext_ln1118_fu_444_p1;
wire   [21:0] zext_ln1116_1_fu_434_p1;
wire   [21:0] sub_ln1118_fu_448_p2;
wire   [22:0] shl_ln728_1_fu_454_p3;
wire  signed [24:0] sext_ln703_8_fu_431_p1;
wire   [24:0] zext_ln728_2_fu_462_p1;
wire   [20:0] shl_ln1118_s_fu_479_p3;
wire   [21:0] zext_ln1118_1_fu_486_p1;
wire   [21:0] zext_ln1116_2_fu_476_p1;
wire   [21:0] sub_ln1118_173_fu_490_p2;
wire   [22:0] shl_ln728_2_fu_496_p3;
wire   [23:0] zext_ln728_4_fu_504_p1;
wire   [23:0] add_ln703_385_fu_508_p2;
wire   [16:0] shl_ln728_3_fu_524_p3;
wire   [21:0] grp_fu_1515_p3;
wire   [24:0] zext_ln703_1_fu_535_p1;
wire  signed [24:0] sext_ln703_11_fu_514_p1;
wire   [24:0] add_ln703_387_fu_538_p2;
wire   [20:0] shl_ln1118_106_fu_551_p3;
wire   [21:0] zext_ln1118_3_fu_558_p1;
wire   [21:0] zext_ln1116_4_fu_548_p1;
wire   [21:0] sub_ln1118_174_fu_562_p2;
wire   [18:0] shl_ln1118_107_fu_589_p3;
wire   [19:0] zext_ln1118_7_fu_596_p1;
wire   [19:0] zext_ln1118_8_fu_600_p1;
wire   [19:0] add_ln1118_fu_604_p2;
wire   [20:0] shl_ln728_5_fu_610_p3;
wire   [16:0] zext_ln1118_9_fu_625_p1;
wire   [16:0] sub_ln1118_175_fu_628_p2;
wire   [17:0] shl_ln728_6_fu_634_p3;
wire  signed [25:0] sext_ln703_12_fu_544_p1;
wire   [25:0] zext_ln728_5_fu_576_p1;
wire   [22:0] zext_ln1116_8_fu_618_p1;
wire  signed [22:0] sext_ln703_169_fu_642_p1;
wire  signed [22:0] add_ln703_389_fu_652_p2;
wire  signed [23:0] grp_fu_1524_p3;
wire  signed [25:0] sext_ln703_171_fu_662_p1;
wire   [25:0] add_ln703_388_fu_646_p2;
wire  signed [21:0] mul_ln1118_fu_1533_p2;
wire   [22:0] shl_ln728_7_fu_671_p3;
wire   [17:0] tmp_fu_684_p3;
wire   [18:0] zext_ln1118_2_fu_521_p1;
wire   [18:0] zext_ln1118_10_fu_691_p1;
wire   [17:0] shl_ln1118_108_fu_701_p3;
wire   [18:0] zext_ln1118_11_fu_708_p1;
wire   [18:0] zext_ln1118_4_fu_583_p1;
wire   [20:0] shl_ln1118_109_fu_718_p3;
wire   [21:0] zext_ln1118_12_fu_725_p1;
wire   [21:0] zext_ln1116_6_fu_622_p1;
wire   [21:0] sub_ln1118_177_fu_729_p2;
wire   [22:0] shl_ln728_s_fu_735_p3;
wire   [20:0] shl_ln1118_110_fu_747_p3;
wire   [21:0] zext_ln1118_14_fu_754_p1;
wire   [21:0] zext_ln1116_fu_428_p1;
wire   [21:0] sub_ln1118_178_fu_758_p2;
wire   [22:0] shl_ln728_9_fu_764_p3;
wire   [23:0] zext_ln1118_13_fu_743_p1;
wire   [23:0] zext_ln703_2_fu_776_p1;
wire   [20:0] shl_ln1118_111_fu_786_p3;
wire   [21:0] zext_ln1118_15_fu_793_p1;
wire   [21:0] zext_ln1116_3_fu_518_p1;
wire   [21:0] sub_ln1118_179_fu_797_p2;
wire   [22:0] shl_ln728_10_fu_803_p3;
wire   [23:0] zext_ln728_9_fu_811_p1;
wire   [23:0] add_ln703_398_fu_815_p2;
wire  signed [24:0] sext_ln703_18_fu_821_p1;
wire   [24:0] zext_ln728_8_fu_772_p1;
wire   [23:0] add_ln703_400_fu_831_p2;
wire   [21:0] zext_ln1118_16_fu_841_p1;
wire   [21:0] sub_ln1118_180_fu_845_p2;
wire   [22:0] shl_ln728_11_fu_851_p3;
wire  signed [24:0] sext_ln703_20_fu_837_p1;
wire   [24:0] zext_ln728_10_fu_859_p1;
wire   [24:0] add_ln703_401_fu_863_p2;
wire   [20:0] shl_ln1118_112_fu_879_p3;
wire   [21:0] zext_ln1118_18_fu_886_p1;
wire   [21:0] zext_ln703_fu_531_p1;
wire   [21:0] sub_ln1118_181_fu_890_p2;
wire   [22:0] shl_ln728_12_fu_896_p3;
wire   [16:0] shl_ln728_13_fu_908_p3;
wire   [23:0] zext_ln728_11_fu_904_p1;
wire   [23:0] zext_ln703_4_fu_915_p1;
wire   [23:0] add_ln703_402_fu_919_p2;
wire   [25:0] zext_ln703_5_fu_925_p1;
wire  signed [25:0] sext_ln703_21_fu_869_p1;
wire   [17:0] shl_ln1118_113_fu_935_p3;
wire   [18:0] zext_ln1118_19_fu_942_p1;
wire   [18:0] zext_ln1118_17_fu_876_p1;
wire   [18:0] add_ln1118_16_fu_946_p2;
wire   [19:0] shl_ln728_14_fu_952_p3;
wire   [20:0] zext_ln728_12_fu_960_p1;
wire   [20:0] add_ln703_404_fu_964_p2;
wire   [19:0] shl_ln728_15_fu_974_p3;
wire  signed [21:0] sext_ln703_23_fu_970_p1;
wire   [21:0] zext_ln728_13_fu_981_p1;
wire   [21:0] add_ln703_405_fu_985_p2;
wire   [20:0] shl_ln1118_114_fu_995_p3;
wire   [17:0] shl_ln1118_115_fu_1006_p3;
wire   [21:0] zext_ln1118_20_fu_1002_p1;
wire   [21:0] zext_ln1118_21_fu_1013_p1;
wire   [21:0] sub_ln1118_182_fu_1017_p2;
wire   [22:0] shl_ln728_16_fu_1023_p3;
wire   [24:0] zext_ln728_14_fu_1031_p1;
wire  signed [24:0] sext_ln703_24_fu_991_p1;
wire   [24:0] add_ln703_406_fu_1035_p2;
wire   [23:0] add_ln703_407_fu_1045_p2;
wire   [25:0] zext_ln703_6_fu_1051_p1;
wire  signed [25:0] sext_ln703_25_fu_1041_p1;
wire   [17:0] shl_ln1118_116_fu_1061_p3;
wire   [21:0] zext_ln1118_22_fu_1068_p1;
wire   [21:0] sub_ln1118_183_fu_1072_p2;
wire   [22:0] shl_ln728_17_fu_1078_p3;
wire   [21:0] sub_ln1118_184_fu_1090_p2;
wire   [22:0] shl_ln728_18_fu_1096_p3;
wire   [23:0] zext_ln728_15_fu_1086_p1;
wire   [23:0] add_ln703_409_fu_1108_p2;
wire  signed [23:0] sext_ln728_1_fu_1104_p1;
wire   [23:0] add_ln703_410_fu_1114_p2;
wire   [21:0] zext_ln1116_7_fu_873_p1;
wire   [21:0] sub_ln1118_185_fu_1124_p2;
wire   [22:0] shl_ln728_19_fu_1130_p3;
wire   [16:0] shl_ln1118_117_fu_1142_p3;
wire   [17:0] zext_ln1118_23_fu_1149_p1;
wire   [17:0] sub_ln1118_186_fu_1153_p2;
wire   [18:0] shl_ln728_20_fu_1159_p3;
wire   [18:0] sub_ln1118_190_fu_1171_p2;
wire   [19:0] shl_ln728_21_fu_1177_p3;
wire   [18:0] zext_ln1118_6_fu_586_p1;
wire   [18:0] zext_ln1118_24_fu_1189_p1;
wire   [18:0] sub_ln1118_191_fu_1193_p2;
wire   [19:0] shl_ln728_22_fu_1199_p3;
wire   [21:0] sub_ln1118_187_fu_1211_p2;
wire   [22:0] shl_ln728_23_fu_1217_p3;
wire   [24:0] zext_ln728_16_fu_1138_p1;
wire  signed [24:0] sext_ln728_2_fu_1225_p1;
wire   [24:0] add_ln703_411_fu_1229_p2;
wire  signed [24:0] sext_ln703_27_fu_1120_p1;
wire  signed [20:0] sext_ln1118_289_fu_1207_p1;
wire  signed [20:0] sext_ln1118_fu_1167_p1;
wire   [20:0] add_ln703_413_fu_1241_p2;
wire  signed [21:0] sext_ln703_177_fu_1247_p1;
wire  signed [21:0] sext_ln1118_288_fu_1185_p1;
wire   [21:0] add_ln703_414_fu_1251_p2;
wire  signed [24:0] sext_ln703_178_fu_1257_p1;
wire   [24:0] add_ln703_412_fu_1235_p2;
wire   [24:0] add_ln703_415_fu_1261_p2;
wire   [21:0] sub_ln1118_188_fu_1271_p2;
wire   [22:0] shl_ln728_24_fu_1277_p3;
wire  signed [24:0] sext_ln703_179_fu_1285_p1;
wire   [24:0] add_ln703_416_fu_1289_p2;
wire  signed [25:0] sext_ln703_180_fu_1295_p1;
wire  signed [25:0] sext_ln703_28_fu_1267_p1;
wire   [23:0] acc_1_V_fu_1309_p2;
wire   [19:0] shl_ln728_8_fu_1329_p3;
wire   [23:0] zext_ln728_6_fu_1319_p1;
wire  signed [23:0] sext_ln728_fu_1336_p1;
wire   [23:0] add_ln703_393_fu_1340_p2;
wire  signed [23:0] sext_ln703_14_fu_1326_p1;
wire   [23:0] add_ln703_394_fu_1346_p2;
wire   [19:0] tmp_s_fu_1356_p3;
wire  signed [22:0] sext_ln728_3_fu_1363_p1;
wire  signed [24:0] sext_ln703_15_fu_1352_p1;
wire   [24:0] zext_ln728_7_fu_1367_p1;
wire   [24:0] add_ln703_395_fu_1371_p2;
wire   [25:0] zext_ln703_3_fu_1381_p1;
wire  signed [25:0] sext_ln703_16_fu_1377_p1;
wire   [25:0] acc_3_V_fu_1384_p2;
wire   [31:0] add_ln308_fu_1427_p2;
wire   [31:0] add_ln303_fu_1473_p2;
wire   [15:0] grp_fu_1506_p0;
wire   [6:0] grp_fu_1506_p1;
wire   [15:0] grp_fu_1515_p0;
wire   [6:0] grp_fu_1515_p1;
wire   [16:0] grp_fu_1515_p2;
wire   [15:0] grp_fu_1524_p0;
wire   [6:0] grp_fu_1524_p1;
wire   [15:0] mul_ln1118_fu_1533_p0;
wire  signed [5:0] mul_ln1118_fu_1533_p1;
reg   [3:0] ap_NS_fsm;
wire   [21:0] grp_fu_1524_p00;
reg    ap_condition_211;
reg    ap_condition_269;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 pX_2 = 32'd0;
#0 sX_2 = 32'd0;
#0 pY_2 = 32'd0;
#0 sY_2 = 32'd0;
#0 kernel_data_V_1_1 = 16'd0;
#0 kernel_data_V_1_2 = 16'd0;
#0 kernel_data_V_1_4 = 16'd0;
#0 kernel_data_V_1_5 = 16'd0;
#0 kernel_data_V_1_7 = 16'd0;
#0 kernel_data_V_1_8 = 16'd0;
end

shift_line_buffer_array_ap_ufixed_1u_config4_s call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_ready),
    .in_elem_data_V_read(data_V_data_V_dout),
    .kernel_window_1_V_read(kernel_data_V_1_1),
    .kernel_window_2_V_read(kernel_data_V_1_2),
    .kernel_window_4_V_read(kernel_data_V_1_4),
    .kernel_window_5_V_read(kernel_data_V_1_5),
    .kernel_window_7_V_read(kernel_data_V_1_7),
    .kernel_window_8_V_read(kernel_data_V_1_8),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8)
);

myproject_axi_mac_muladd_16ns_7ns_18s_23_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 18 ),
    .dout_WIDTH( 23 ))
myproject_axi_mac_muladd_16ns_7ns_18s_23_1_1_U19(
    .din0(grp_fu_1506_p0),
    .din1(grp_fu_1506_p1),
    .din2(add_ln703_fu_418_p2),
    .dout(grp_fu_1506_p3)
);

myproject_axi_mac_muladd_16ns_7ns_17ns_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 17 ),
    .dout_WIDTH( 22 ))
myproject_axi_mac_muladd_16ns_7ns_17ns_22_1_1_U20(
    .din0(grp_fu_1515_p0),
    .din1(grp_fu_1515_p1),
    .din2(grp_fu_1515_p2),
    .dout(grp_fu_1515_p3)
);

myproject_axi_mac_muladd_16ns_7ns_23s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 24 ))
myproject_axi_mac_muladd_16ns_7ns_23s_24_1_1_U21(
    .din0(grp_fu_1524_p0),
    .din1(grp_fu_1524_p1),
    .din2(add_ln703_389_fu_652_p2),
    .dout(grp_fu_1524_p3)
);

myproject_axi_mul_mul_16ns_6s_22_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 22 ))
myproject_axi_mul_mul_16ns_6s_22_1_1_U22(
    .din0(mul_ln1118_fu_1533_p0),
    .din1(mul_ln1118_fu_1533_p1),
    .dout(mul_ln1118_fu_1533_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln78_fu_1498_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (icmp_ln78_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        indvar_flatten6_reg_180 <= add_ln78_reg_1644;
    end else if (((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln78_fu_1498_p2 == 1'd1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        indvar_flatten6_reg_180 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_211)) begin
        if ((icmp_ln293_fu_1411_p2 == 1'd1)) begin
            pX_2 <= 32'd0;
        end else if ((icmp_ln293_fu_1411_p2 == 1'd0)) begin
            pX_2 <= add_ln306_fu_1416_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_269)) begin
        if ((icmp_ln297_fu_1457_p2 == 1'd1)) begin
            pY_2 <= 32'd0;
        end else if ((icmp_ln297_fu_1457_p2 == 1'd0)) begin
            pY_2 <= add_ln301_fu_1462_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_211)) begin
        if ((icmp_ln293_fu_1411_p2 == 1'd1)) begin
            sX_2 <= 32'd0;
        end else if ((icmp_ln293_fu_1411_p2 == 1'd0)) begin
            sX_2 <= select_ln308_fu_1432_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        acc_2_V_reg_1664 <= acc_2_V_fu_665_p2;
        acc_4_V_reg_1689[24 : 1] <= acc_4_V_fu_825_p2[24 : 1];
        acc_5_V_reg_1694[25 : 1] <= acc_5_V_fu_929_p2[25 : 1];
        acc_6_V_reg_1699[25 : 1] <= acc_6_V_fu_1055_p2[25 : 1];
        acc_7_V_reg_1704[25 : 1] <= acc_7_V_fu_1299_p2[25 : 1];
        add_ln703_392_reg_1669[22 : 1] <= add_ln703_392_fu_678_p2[22 : 1];
        add_ln703_396_reg_1684[23 : 1] <= add_ln703_396_fu_780_p2[23 : 1];
        shl_ln728_4_reg_1659[22 : 1] <= shl_ln728_4_fu_568_p3[22 : 1];
        sub_ln1118_176_reg_1679 <= sub_ln1118_176_fu_712_p2;
        sub_ln1118_189_reg_1674 <= sub_ln1118_189_fu_695_p2;
        tmp_data_0_V_4_reg_1654 <= tmp_data_0_V_4_fu_470_p2;
        zext_ln728_3_reg_1649[22 : 1] <= zext_ln728_3_fu_466_p1[22 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln78_reg_1644 <= add_ln78_fu_401_p2;
        and_ln272_2_reg_1640 <= and_ln272_2_fu_395_p2;
        icmp_ln272_1_reg_1623 <= icmp_ln272_1_fu_337_p2;
        icmp_ln272_reg_1613 <= icmp_ln272_fu_327_p2;
        kernel_data_V_1_0_ret_reg_1555 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0;
        kernel_data_V_1_1 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3;
        kernel_data_V_1_1_ret_reg_1562 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3;
        kernel_data_V_1_2 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4;
        kernel_data_V_1_2_ret_reg_1570 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4;
        kernel_data_V_1_3_ret_reg_1548 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1;
        kernel_data_V_1_4 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5;
        kernel_data_V_1_4_ret_reg_1579 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5;
        kernel_data_V_1_5 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6;
        kernel_data_V_1_5_ret_reg_1587 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6;
        kernel_data_V_1_6_ret_reg_1540 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2;
        kernel_data_V_1_7 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7;
        kernel_data_V_1_7_ret_reg_1596 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7;
        kernel_data_V_1_8 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8;
        kernel_data_V_1_8_ret_reg_1602 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8;
        pX_2_load_reg_1634 <= pX_2;
        pY_2_load_reg_1628 <= pY_2;
        sX_2_load_reg_1608 <= sX_2;
        sY_2_load_reg_1618 <= sY_2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_1411_p2 == 1'd1))) begin
        sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_198_p4;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln78_fu_1498_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_1411_p2 == 1'd1))) begin
        if ((icmp_ln297_fu_1457_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_198_p4 = 32'd0;
        end else if ((icmp_ln297_fu_1457_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_i_i_phi_fu_198_p4 = select_ln303_fu_1478_p3;
        end else begin
            ap_phi_mux_storemerge_i_i_phi_fu_198_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_198_p4 = 'bx;
    end
end

always @ (*) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln78_fu_1498_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'd1 == and_ln272_2_reg_1640) & (1'b1 == ap_CS_fsm_state4))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'd0 == and_ln272_2_fu_395_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((data_V_data_V_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2) & (1'd1 == and_ln272_2_fu_395_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln78_fu_1498_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_1_V_fu_1309_p2 = ($signed(zext_ln728_3_reg_1649) + $signed(24'd16773120));

assign acc_2_V_fu_665_p2 = ($signed(sext_ln703_171_fu_662_p1) + $signed(add_ln703_388_fu_646_p2));

assign acc_3_V_fu_1384_p2 = ($signed(zext_ln703_3_fu_1381_p1) + $signed(sext_ln703_16_fu_1377_p1));

assign acc_4_V_fu_825_p2 = ($signed(sext_ln703_18_fu_821_p1) + $signed(zext_ln728_8_fu_772_p1));

assign acc_5_V_fu_929_p2 = ($signed(zext_ln703_5_fu_925_p1) + $signed(sext_ln703_21_fu_869_p1));

assign acc_6_V_fu_1055_p2 = ($signed(zext_ln703_6_fu_1051_p1) + $signed(sext_ln703_25_fu_1041_p1));

assign acc_7_V_fu_1299_p2 = ($signed(sext_ln703_180_fu_1295_p1) + $signed(sext_ln703_28_fu_1267_p1));

assign add_ln1118_16_fu_946_p2 = (zext_ln1118_19_fu_942_p1 + zext_ln1118_17_fu_876_p1);

assign add_ln1118_fu_604_p2 = (zext_ln1118_7_fu_596_p1 + zext_ln1118_8_fu_600_p1);

assign add_ln301_fu_1462_p2 = (pY_2_load_reg_1628 + 32'd1);

assign add_ln303_fu_1473_p2 = (sY_2_load_reg_1618 + 32'd1);

assign add_ln306_fu_1416_p2 = (pX_2_load_reg_1634 + 32'd1);

assign add_ln308_fu_1427_p2 = (sX_2_load_reg_1608 + 32'd1);

assign add_ln703_385_fu_508_p2 = ($signed(zext_ln728_4_fu_504_p1) + $signed(24'd16762880));

assign add_ln703_387_fu_538_p2 = ($signed(zext_ln703_1_fu_535_p1) + $signed(sext_ln703_11_fu_514_p1));

assign add_ln703_388_fu_646_p2 = ($signed(sext_ln703_12_fu_544_p1) + $signed(zext_ln728_5_fu_576_p1));

assign add_ln703_389_fu_652_p2 = ($signed(zext_ln1116_8_fu_618_p1) + $signed(sext_ln703_169_fu_642_p1));

assign add_ln703_392_fu_678_p2 = ($signed(shl_ln728_7_fu_671_p3) + $signed(23'd8378368));

assign add_ln703_393_fu_1340_p2 = ($signed(zext_ln728_6_fu_1319_p1) + $signed(sext_ln728_fu_1336_p1));

assign add_ln703_394_fu_1346_p2 = ($signed(add_ln703_393_fu_1340_p2) + $signed(sext_ln703_14_fu_1326_p1));

assign add_ln703_395_fu_1371_p2 = ($signed(sext_ln703_15_fu_1352_p1) + $signed(zext_ln728_7_fu_1367_p1));

assign add_ln703_396_fu_780_p2 = (zext_ln1118_13_fu_743_p1 + zext_ln703_2_fu_776_p1);

assign add_ln703_398_fu_815_p2 = ($signed(zext_ln728_9_fu_811_p1) + $signed(24'd16748544));

assign add_ln703_400_fu_831_p2 = ($signed(zext_ln728_4_fu_504_p1) + $signed(24'd16760832));

assign add_ln703_401_fu_863_p2 = ($signed(sext_ln703_20_fu_837_p1) + $signed(zext_ln728_10_fu_859_p1));

assign add_ln703_402_fu_919_p2 = (zext_ln728_11_fu_904_p1 + zext_ln703_4_fu_915_p1);

assign add_ln703_404_fu_964_p2 = ($signed(zext_ln728_12_fu_960_p1) + $signed(21'd2086912));

assign add_ln703_405_fu_985_p2 = ($signed(sext_ln703_23_fu_970_p1) + $signed(zext_ln728_13_fu_981_p1));

assign add_ln703_406_fu_1035_p2 = ($signed(zext_ln728_14_fu_1031_p1) + $signed(sext_ln703_24_fu_991_p1));

assign add_ln703_407_fu_1045_p2 = (zext_ln703_2_fu_776_p1 + zext_ln728_3_fu_466_p1);

assign add_ln703_409_fu_1108_p2 = ($signed(zext_ln728_15_fu_1086_p1) + $signed(24'd16775168));

assign add_ln703_410_fu_1114_p2 = ($signed(add_ln703_409_fu_1108_p2) + $signed(sext_ln728_1_fu_1104_p1));

assign add_ln703_411_fu_1229_p2 = ($signed(zext_ln728_16_fu_1138_p1) + $signed(sext_ln728_2_fu_1225_p1));

assign add_ln703_412_fu_1235_p2 = ($signed(add_ln703_411_fu_1229_p2) + $signed(sext_ln703_27_fu_1120_p1));

assign add_ln703_413_fu_1241_p2 = ($signed(sext_ln1118_289_fu_1207_p1) + $signed(sext_ln1118_fu_1167_p1));

assign add_ln703_414_fu_1251_p2 = ($signed(sext_ln703_177_fu_1247_p1) + $signed(sext_ln1118_288_fu_1185_p1));

assign add_ln703_415_fu_1261_p2 = ($signed(sext_ln703_178_fu_1257_p1) + $signed(add_ln703_412_fu_1235_p2));

assign add_ln703_416_fu_1289_p2 = ($signed(zext_ln728_8_fu_772_p1) + $signed(sext_ln703_179_fu_1285_p1));

assign add_ln703_fu_418_p2 = ($signed(zext_ln728_fu_414_p1) + $signed(18'd155648));

assign add_ln78_fu_401_p2 = (indvar_flatten6_reg_180 + 12'd1);

assign and_ln272_1_fu_389_p2 = (icmp_ln272_3_fu_377_p2 & icmp_ln272_2_fu_357_p2);

assign and_ln272_2_fu_395_p2 = (and_ln272_fu_383_p2 & and_ln272_1_fu_389_p2);

assign and_ln272_fu_383_p2 = (icmp_ln272_fu_327_p2 & icmp_ln272_1_fu_337_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state4 = ((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0));
end

always @ (*) begin
    ap_condition_211 = (~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4));
end

always @ (*) begin
    ap_condition_269 = (~((1'd1 == and_ln272_2_reg_1640) & (io_acc_block_signal_op257 == 1'b0)) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln293_fu_1411_p2 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign grp_fu_1506_p0 = zext_ln1116_fu_428_p1;

assign grp_fu_1506_p1 = 22'd42;

assign grp_fu_1515_p0 = zext_ln1116_3_fu_518_p1;

assign grp_fu_1515_p1 = 22'd54;

assign grp_fu_1515_p2 = zext_ln703_fu_531_p1;

assign grp_fu_1524_p0 = grp_fu_1524_p00;

assign grp_fu_1524_p00 = kernel_data_V_1_4_ret_reg_1579;

assign grp_fu_1524_p1 = 22'd42;

assign icmp_ln272_1_fu_337_p2 = ((sY_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln272_2_fu_357_p2 = (($signed(tmp_1_fu_347_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_3_fu_377_p2 = (($signed(tmp_2_fu_367_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_327_p2 = ((sX_2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_1411_p2 = ((pX_2_load_reg_1634 == 32'd65) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_1457_p2 = ((pY_2_load_reg_1628 == 32'd33) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1498_p2 = ((indvar_flatten6_reg_180 == 12'd2243) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op257 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_fu_1533_p0 = zext_ln1116_2_fu_476_p1;

assign mul_ln1118_fu_1533_p1 = 22'd4194275;

assign res_V_data_0_V_din = $signed(tmp_data_0_V_4_reg_1654);

assign res_V_data_1_V_din = $signed(acc_1_V_fu_1309_p2);

assign res_V_data_2_V_din = $signed(acc_2_V_reg_1664);

assign res_V_data_3_V_din = $signed(acc_3_V_fu_1384_p2);

assign res_V_data_4_V_din = $signed(acc_4_V_reg_1689);

assign res_V_data_5_V_din = $signed(acc_5_V_reg_1694);

assign res_V_data_6_V_din = $signed(acc_6_V_reg_1699);

assign res_V_data_7_V_din = $signed(acc_7_V_reg_1704);

assign select_ln303_fu_1478_p3 = ((icmp_ln272_1_reg_1623[0:0] === 1'b1) ? 32'd2 : add_ln303_fu_1473_p2);

assign select_ln308_fu_1432_p3 = ((icmp_ln272_reg_1613[0:0] === 1'b1) ? 32'd2 : add_ln308_fu_1427_p2);

assign sext_ln1118_288_fu_1185_p1 = $signed(shl_ln728_21_fu_1177_p3);

assign sext_ln1118_289_fu_1207_p1 = $signed(shl_ln728_22_fu_1199_p3);

assign sext_ln1118_fu_1167_p1 = $signed(shl_ln728_20_fu_1159_p3);

assign sext_ln703_11_fu_514_p1 = $signed(add_ln703_385_fu_508_p2);

assign sext_ln703_12_fu_544_p1 = $signed(add_ln703_387_fu_538_p2);

assign sext_ln703_14_fu_1326_p1 = $signed(add_ln703_392_reg_1669);

assign sext_ln703_15_fu_1352_p1 = $signed(add_ln703_394_fu_1346_p2);

assign sext_ln703_169_fu_642_p1 = $signed(shl_ln728_6_fu_634_p3);

assign sext_ln703_16_fu_1377_p1 = $signed(add_ln703_395_fu_1371_p2);

assign sext_ln703_171_fu_662_p1 = grp_fu_1524_p3;

assign sext_ln703_177_fu_1247_p1 = $signed(add_ln703_413_fu_1241_p2);

assign sext_ln703_178_fu_1257_p1 = $signed(add_ln703_414_fu_1251_p2);

assign sext_ln703_179_fu_1285_p1 = $signed(shl_ln728_24_fu_1277_p3);

assign sext_ln703_180_fu_1295_p1 = $signed(add_ln703_416_fu_1289_p2);

assign sext_ln703_18_fu_821_p1 = $signed(add_ln703_398_fu_815_p2);

assign sext_ln703_20_fu_837_p1 = $signed(add_ln703_400_fu_831_p2);

assign sext_ln703_21_fu_869_p1 = $signed(add_ln703_401_fu_863_p2);

assign sext_ln703_23_fu_970_p1 = $signed(add_ln703_404_fu_964_p2);

assign sext_ln703_24_fu_991_p1 = $signed(add_ln703_405_fu_985_p2);

assign sext_ln703_25_fu_1041_p1 = $signed(add_ln703_406_fu_1035_p2);

assign sext_ln703_27_fu_1120_p1 = $signed(add_ln703_410_fu_1114_p2);

assign sext_ln703_28_fu_1267_p1 = $signed(add_ln703_415_fu_1261_p2);

assign sext_ln703_8_fu_431_p1 = grp_fu_1506_p3;

assign sext_ln728_1_fu_1104_p1 = $signed(shl_ln728_18_fu_1096_p3);

assign sext_ln728_2_fu_1225_p1 = $signed(shl_ln728_23_fu_1217_p3);

assign sext_ln728_3_fu_1363_p1 = $signed(tmp_s_fu_1356_p3);

assign sext_ln728_fu_1336_p1 = $signed(shl_ln728_8_fu_1329_p3);

assign shl_ln1118_106_fu_551_p3 = {{kernel_data_V_1_3_ret_reg_1548}, {5'd0}};

assign shl_ln1118_107_fu_589_p3 = {{kernel_data_V_1_5_ret_reg_1587}, {3'd0}};

assign shl_ln1118_108_fu_701_p3 = {{kernel_data_V_1_4_ret_reg_1579}, {2'd0}};

assign shl_ln1118_109_fu_718_p3 = {{kernel_data_V_1_6_ret_reg_1540}, {5'd0}};

assign shl_ln1118_110_fu_747_p3 = {{kernel_data_V_1_7_ret_reg_1596}, {5'd0}};

assign shl_ln1118_111_fu_786_p3 = {{kernel_data_V_1_1_ret_reg_1562}, {5'd0}};

assign shl_ln1118_112_fu_879_p3 = {{kernel_data_V_1_2_ret_reg_1570}, {5'd0}};

assign shl_ln1118_113_fu_935_p3 = {{kernel_data_V_1_2_ret_reg_1570}, {2'd0}};

assign shl_ln1118_114_fu_995_p3 = {{kernel_data_V_1_5_ret_reg_1587}, {5'd0}};

assign shl_ln1118_115_fu_1006_p3 = {{kernel_data_V_1_5_ret_reg_1587}, {2'd0}};

assign shl_ln1118_116_fu_1061_p3 = {{kernel_data_V_1_0_ret_reg_1555}, {2'd0}};

assign shl_ln1118_117_fu_1142_p3 = {{kernel_data_V_1_3_ret_reg_1548}, {1'd0}};

assign shl_ln1118_s_fu_479_p3 = {{kernel_data_V_1_0_ret_reg_1555}, {5'd0}};

assign shl_ln1_fu_437_p3 = {{kernel_data_V_1_8_ret_reg_1602}, {5'd0}};

assign shl_ln728_10_fu_803_p3 = {{sub_ln1118_179_fu_797_p2}, {1'd0}};

assign shl_ln728_11_fu_851_p3 = {{sub_ln1118_180_fu_845_p2}, {1'd0}};

assign shl_ln728_12_fu_896_p3 = {{sub_ln1118_181_fu_890_p2}, {1'd0}};

assign shl_ln728_13_fu_908_p3 = {{kernel_data_V_1_6_ret_reg_1540}, {1'd0}};

assign shl_ln728_14_fu_952_p3 = {{add_ln1118_16_fu_946_p2}, {1'd0}};

assign shl_ln728_15_fu_974_p3 = {{kernel_data_V_1_4_ret_reg_1579}, {4'd0}};

assign shl_ln728_16_fu_1023_p3 = {{sub_ln1118_182_fu_1017_p2}, {1'd0}};

assign shl_ln728_17_fu_1078_p3 = {{sub_ln1118_183_fu_1072_p2}, {1'd0}};

assign shl_ln728_18_fu_1096_p3 = {{sub_ln1118_184_fu_1090_p2}, {1'd0}};

assign shl_ln728_19_fu_1130_p3 = {{sub_ln1118_185_fu_1124_p2}, {1'd0}};

assign shl_ln728_1_fu_454_p3 = {{sub_ln1118_fu_448_p2}, {1'd0}};

assign shl_ln728_20_fu_1159_p3 = {{sub_ln1118_186_fu_1153_p2}, {1'd0}};

assign shl_ln728_21_fu_1177_p3 = {{sub_ln1118_190_fu_1171_p2}, {1'd0}};

assign shl_ln728_22_fu_1199_p3 = {{sub_ln1118_191_fu_1193_p2}, {1'd0}};

assign shl_ln728_23_fu_1217_p3 = {{sub_ln1118_187_fu_1211_p2}, {1'd0}};

assign shl_ln728_24_fu_1277_p3 = {{sub_ln1118_188_fu_1271_p2}, {1'd0}};

assign shl_ln728_2_fu_496_p3 = {{sub_ln1118_173_fu_490_p2}, {1'd0}};

assign shl_ln728_3_fu_524_p3 = {{kernel_data_V_1_2_ret_reg_1570}, {1'd0}};

assign shl_ln728_4_fu_568_p3 = {{sub_ln1118_174_fu_562_p2}, {1'd0}};

assign shl_ln728_5_fu_610_p3 = {{add_ln1118_fu_604_p2}, {1'd0}};

assign shl_ln728_6_fu_634_p3 = {{sub_ln1118_175_fu_628_p2}, {1'd0}};

assign shl_ln728_7_fu_671_p3 = {{mul_ln1118_fu_1533_p2}, {1'd0}};

assign shl_ln728_8_fu_1329_p3 = {{sub_ln1118_189_reg_1674}, {1'd0}};

assign shl_ln728_9_fu_764_p3 = {{sub_ln1118_178_fu_758_p2}, {1'd0}};

assign shl_ln728_s_fu_735_p3 = {{sub_ln1118_177_fu_729_p2}, {1'd0}};

assign shl_ln_fu_407_p3 = {{kernel_data_V_1_5_ret_reg_1587}, {1'd0}};

assign start_out = real_start;

assign sub_ln1118_173_fu_490_p2 = (zext_ln1118_1_fu_486_p1 - zext_ln1116_2_fu_476_p1);

assign sub_ln1118_174_fu_562_p2 = (zext_ln1118_3_fu_558_p1 - zext_ln1116_4_fu_548_p1);

assign sub_ln1118_175_fu_628_p2 = (17'd0 - zext_ln1118_9_fu_625_p1);

assign sub_ln1118_176_fu_712_p2 = (zext_ln1118_11_fu_708_p1 - zext_ln1118_4_fu_583_p1);

assign sub_ln1118_177_fu_729_p2 = (zext_ln1118_12_fu_725_p1 - zext_ln1116_6_fu_622_p1);

assign sub_ln1118_178_fu_758_p2 = (zext_ln1118_14_fu_754_p1 - zext_ln1116_fu_428_p1);

assign sub_ln1118_179_fu_797_p2 = (zext_ln1118_15_fu_793_p1 - zext_ln1116_3_fu_518_p1);

assign sub_ln1118_180_fu_845_p2 = (zext_ln1118_15_fu_793_p1 - zext_ln1118_16_fu_841_p1);

assign sub_ln1118_181_fu_890_p2 = (zext_ln1118_18_fu_886_p1 - zext_ln703_fu_531_p1);

assign sub_ln1118_182_fu_1017_p2 = (zext_ln1118_20_fu_1002_p1 - zext_ln1118_21_fu_1013_p1);

assign sub_ln1118_183_fu_1072_p2 = (zext_ln1118_1_fu_486_p1 - zext_ln1118_22_fu_1068_p1);

assign sub_ln1118_184_fu_1090_p2 = (22'd0 - zext_ln1118_15_fu_793_p1);

assign sub_ln1118_185_fu_1124_p2 = (zext_ln1118_18_fu_886_p1 - zext_ln1116_7_fu_873_p1);

assign sub_ln1118_186_fu_1153_p2 = (18'd0 - zext_ln1118_23_fu_1149_p1);

assign sub_ln1118_187_fu_1211_p2 = (22'd0 - zext_ln1118_12_fu_725_p1);

assign sub_ln1118_188_fu_1271_p2 = (22'd0 - zext_ln1118_fu_444_p1);

assign sub_ln1118_189_fu_695_p2 = (zext_ln1118_2_fu_521_p1 - zext_ln1118_10_fu_691_p1);

assign sub_ln1118_190_fu_1171_p2 = (zext_ln1118_4_fu_583_p1 - zext_ln1118_11_fu_708_p1);

assign sub_ln1118_191_fu_1193_p2 = (zext_ln1118_6_fu_586_p1 - zext_ln1118_24_fu_1189_p1);

assign sub_ln1118_fu_448_p2 = (zext_ln1118_fu_444_p1 - zext_ln1116_1_fu_434_p1);

assign tmp_1_fu_347_p4 = {{pY_2[31:1]}};

assign tmp_2_fu_367_p4 = {{pX_2[31:1]}};

assign tmp_data_0_V_4_fu_470_p2 = ($signed(sext_ln703_8_fu_431_p1) + $signed(zext_ln728_2_fu_462_p1));

assign tmp_fu_684_p3 = {{kernel_data_V_1_1_ret_reg_1562}, {2'd0}};

assign tmp_s_fu_1356_p3 = {{sub_ln1118_176_reg_1679}, {1'd0}};

assign zext_ln1116_1_fu_434_p1 = kernel_data_V_1_8_ret_reg_1602;

assign zext_ln1116_2_fu_476_p1 = kernel_data_V_1_0_ret_reg_1555;

assign zext_ln1116_3_fu_518_p1 = kernel_data_V_1_1_ret_reg_1562;

assign zext_ln1116_4_fu_548_p1 = kernel_data_V_1_3_ret_reg_1548;

assign zext_ln1116_6_fu_622_p1 = kernel_data_V_1_6_ret_reg_1540;

assign zext_ln1116_7_fu_873_p1 = kernel_data_V_1_2_ret_reg_1570;

assign zext_ln1116_8_fu_618_p1 = shl_ln728_5_fu_610_p3;

assign zext_ln1116_fu_428_p1 = kernel_data_V_1_7_ret_reg_1596;

assign zext_ln1118_10_fu_691_p1 = tmp_fu_684_p3;

assign zext_ln1118_11_fu_708_p1 = shl_ln1118_108_fu_701_p3;

assign zext_ln1118_12_fu_725_p1 = shl_ln1118_109_fu_718_p3;

assign zext_ln1118_13_fu_743_p1 = shl_ln728_s_fu_735_p3;

assign zext_ln1118_14_fu_754_p1 = shl_ln1118_110_fu_747_p3;

assign zext_ln1118_15_fu_793_p1 = shl_ln1118_111_fu_786_p3;

assign zext_ln1118_16_fu_841_p1 = tmp_fu_684_p3;

assign zext_ln1118_17_fu_876_p1 = kernel_data_V_1_2_ret_reg_1570;

assign zext_ln1118_18_fu_886_p1 = shl_ln1118_112_fu_879_p3;

assign zext_ln1118_19_fu_942_p1 = shl_ln1118_113_fu_935_p3;

assign zext_ln1118_1_fu_486_p1 = shl_ln1118_s_fu_479_p3;

assign zext_ln1118_20_fu_1002_p1 = shl_ln1118_114_fu_995_p3;

assign zext_ln1118_21_fu_1013_p1 = shl_ln1118_115_fu_1006_p3;

assign zext_ln1118_22_fu_1068_p1 = shl_ln1118_116_fu_1061_p3;

assign zext_ln1118_23_fu_1149_p1 = shl_ln1118_117_fu_1142_p3;

assign zext_ln1118_24_fu_1189_p1 = shl_ln1118_115_fu_1006_p3;

assign zext_ln1118_2_fu_521_p1 = kernel_data_V_1_1_ret_reg_1562;

assign zext_ln1118_3_fu_558_p1 = shl_ln1118_106_fu_551_p3;

assign zext_ln1118_4_fu_583_p1 = kernel_data_V_1_4_ret_reg_1579;

assign zext_ln1118_6_fu_586_p1 = kernel_data_V_1_5_ret_reg_1587;

assign zext_ln1118_7_fu_596_p1 = shl_ln1118_107_fu_589_p3;

assign zext_ln1118_8_fu_600_p1 = shl_ln_fu_407_p3;

assign zext_ln1118_9_fu_625_p1 = kernel_data_V_1_6_ret_reg_1540;

assign zext_ln1118_fu_444_p1 = shl_ln1_fu_437_p3;

assign zext_ln703_1_fu_535_p1 = grp_fu_1515_p3;

assign zext_ln703_2_fu_776_p1 = shl_ln728_9_fu_764_p3;

assign zext_ln703_3_fu_1381_p1 = add_ln703_396_reg_1684;

assign zext_ln703_4_fu_915_p1 = shl_ln728_13_fu_908_p3;

assign zext_ln703_5_fu_925_p1 = add_ln703_402_fu_919_p2;

assign zext_ln703_6_fu_1051_p1 = add_ln703_407_fu_1045_p2;

assign zext_ln703_fu_531_p1 = shl_ln728_3_fu_524_p3;

assign zext_ln728_10_fu_859_p1 = shl_ln728_11_fu_851_p3;

assign zext_ln728_11_fu_904_p1 = shl_ln728_12_fu_896_p3;

assign zext_ln728_12_fu_960_p1 = shl_ln728_14_fu_952_p3;

assign zext_ln728_13_fu_981_p1 = shl_ln728_15_fu_974_p3;

assign zext_ln728_14_fu_1031_p1 = shl_ln728_16_fu_1023_p3;

assign zext_ln728_15_fu_1086_p1 = shl_ln728_17_fu_1078_p3;

assign zext_ln728_16_fu_1138_p1 = shl_ln728_19_fu_1130_p3;

assign zext_ln728_2_fu_462_p1 = shl_ln728_1_fu_454_p3;

assign zext_ln728_3_fu_466_p1 = shl_ln728_1_fu_454_p3;

assign zext_ln728_4_fu_504_p1 = shl_ln728_2_fu_496_p3;

assign zext_ln728_5_fu_576_p1 = shl_ln728_4_fu_568_p3;

assign zext_ln728_6_fu_1319_p1 = shl_ln728_4_reg_1659;

assign zext_ln728_7_fu_1367_p1 = $unsigned(sext_ln728_3_fu_1363_p1);

assign zext_ln728_8_fu_772_p1 = shl_ln728_9_fu_764_p3;

assign zext_ln728_9_fu_811_p1 = shl_ln728_10_fu_803_p3;

assign zext_ln728_fu_414_p1 = shl_ln_fu_407_p3;

always @ (posedge ap_clk) begin
    zext_ln728_3_reg_1649[0] <= 1'b0;
    zext_ln728_3_reg_1649[23] <= 1'b0;
    shl_ln728_4_reg_1659[0] <= 1'b0;
    add_ln703_392_reg_1669[0] <= 1'b0;
    add_ln703_396_reg_1684[0] <= 1'b0;
    acc_4_V_reg_1689[0] <= 1'b0;
    acc_5_V_reg_1694[0] <= 1'b0;
    acc_6_V_reg_1699[0] <= 1'b0;
    acc_7_V_reg_1704[0] <= 1'b0;
end

endmodule //conv_2d_cl_array_array_ap_fixed_8u_config4_s
