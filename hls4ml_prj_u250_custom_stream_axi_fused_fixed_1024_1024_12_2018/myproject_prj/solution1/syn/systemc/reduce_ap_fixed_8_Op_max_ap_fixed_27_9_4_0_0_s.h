// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_HH_
#define _reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s : public sc_module {
    // Port declarations 10
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<27> > x_0_V_read;
    sc_in< sc_lv<27> > x_1_V_read;
    sc_in< sc_lv<27> > x_2_V_read;
    sc_in< sc_lv<27> > x_3_V_read;
    sc_in< sc_lv<27> > x_4_V_read;
    sc_in< sc_lv<27> > x_5_V_read;
    sc_in< sc_lv<27> > x_6_V_read;
    sc_in< sc_lv<27> > x_7_V_read;
    sc_out< sc_lv<27> > ap_return;


    // Module declarations
    reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s(sc_module_name name);
    SC_HAS_PROCESS(reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s);

    ~reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > icmp_ln1496_fu_66_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_1_fu_80_p2;
    sc_signal< sc_lv<27> > select_ln86_fu_72_p3;
    sc_signal< sc_lv<27> > select_ln86_1_fu_86_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_2_fu_94_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_3_fu_108_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_4_fu_122_p2;
    sc_signal< sc_lv<27> > select_ln86_3_fu_114_p3;
    sc_signal< sc_lv<27> > select_ln86_4_fu_128_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_5_fu_136_p2;
    sc_signal< sc_lv<27> > select_ln86_2_fu_100_p3;
    sc_signal< sc_lv<27> > select_ln86_5_fu_142_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_6_fu_150_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln1496_1_fu_80_p2();
    void thread_icmp_ln1496_2_fu_94_p2();
    void thread_icmp_ln1496_3_fu_108_p2();
    void thread_icmp_ln1496_4_fu_122_p2();
    void thread_icmp_ln1496_5_fu_136_p2();
    void thread_icmp_ln1496_6_fu_150_p2();
    void thread_icmp_ln1496_fu_66_p2();
    void thread_select_ln86_1_fu_86_p3();
    void thread_select_ln86_2_fu_100_p3();
    void thread_select_ln86_3_fu_114_p3();
    void thread_select_ln86_4_fu_128_p3();
    void thread_select_ln86_5_fu_142_p3();
    void thread_select_ln86_fu_72_p3();
};

}

using namespace ap_rtl;

#endif
