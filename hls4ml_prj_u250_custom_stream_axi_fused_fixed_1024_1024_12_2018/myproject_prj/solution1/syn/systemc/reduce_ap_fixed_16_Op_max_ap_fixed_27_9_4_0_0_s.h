// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s_HH_
#define _reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<27> > x_0_V_read;
    sc_in< sc_lv<27> > x_1_V_read;
    sc_in< sc_lv<27> > x_2_V_read;
    sc_in< sc_lv<27> > x_3_V_read;
    sc_in< sc_lv<27> > x_4_V_read;
    sc_in< sc_lv<27> > x_5_V_read;
    sc_in< sc_lv<27> > x_6_V_read;
    sc_in< sc_lv<27> > x_7_V_read;
    sc_in< sc_lv<27> > x_8_V_read;
    sc_in< sc_lv<27> > x_9_V_read;
    sc_in< sc_lv<27> > x_10_V_read;
    sc_in< sc_lv<27> > x_11_V_read;
    sc_in< sc_lv<27> > x_12_V_read;
    sc_in< sc_lv<27> > x_13_V_read;
    sc_in< sc_lv<27> > x_14_V_read;
    sc_in< sc_lv<27> > x_15_V_read;
    sc_out< sc_lv<27> > ap_return;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s(sc_module_name name);
    SC_HAS_PROCESS(reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s);

    ~reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<27> > select_ln86_12_fu_220_p3;
    sc_signal< sc_lv<27> > select_ln86_12_reg_336;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<27> > select_ln86_19_fu_318_p3;
    sc_signal< sc_lv<27> > select_ln86_19_reg_342;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln1496_fu_130_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_7_fu_144_p2;
    sc_signal< sc_lv<27> > select_ln86_fu_136_p3;
    sc_signal< sc_lv<27> > select_ln86_7_fu_150_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_8_fu_158_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_9_fu_172_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_10_fu_186_p2;
    sc_signal< sc_lv<27> > select_ln86_9_fu_178_p3;
    sc_signal< sc_lv<27> > select_ln86_10_fu_192_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_11_fu_200_p2;
    sc_signal< sc_lv<27> > select_ln86_8_fu_164_p3;
    sc_signal< sc_lv<27> > select_ln86_11_fu_206_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_12_fu_214_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_13_fu_228_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_14_fu_242_p2;
    sc_signal< sc_lv<27> > select_ln86_13_fu_234_p3;
    sc_signal< sc_lv<27> > select_ln86_14_fu_248_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_15_fu_256_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_16_fu_270_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_17_fu_284_p2;
    sc_signal< sc_lv<27> > select_ln86_16_fu_276_p3;
    sc_signal< sc_lv<27> > select_ln86_17_fu_290_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_18_fu_298_p2;
    sc_signal< sc_lv<27> > select_ln86_15_fu_262_p3;
    sc_signal< sc_lv<27> > select_ln86_18_fu_304_p3;
    sc_signal< sc_lv<1> > icmp_ln1496_19_fu_312_p2;
    sc_signal< sc_lv<1> > icmp_ln1496_20_fu_326_p2;
    sc_signal< sc_lv<27> > select_ln86_20_fu_330_p3;
    sc_signal< sc_logic > ap_ce_reg;
    sc_signal< sc_lv<27> > ap_return_int_reg;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_return();
    void thread_icmp_ln1496_10_fu_186_p2();
    void thread_icmp_ln1496_11_fu_200_p2();
    void thread_icmp_ln1496_12_fu_214_p2();
    void thread_icmp_ln1496_13_fu_228_p2();
    void thread_icmp_ln1496_14_fu_242_p2();
    void thread_icmp_ln1496_15_fu_256_p2();
    void thread_icmp_ln1496_16_fu_270_p2();
    void thread_icmp_ln1496_17_fu_284_p2();
    void thread_icmp_ln1496_18_fu_298_p2();
    void thread_icmp_ln1496_19_fu_312_p2();
    void thread_icmp_ln1496_20_fu_326_p2();
    void thread_icmp_ln1496_7_fu_144_p2();
    void thread_icmp_ln1496_8_fu_158_p2();
    void thread_icmp_ln1496_9_fu_172_p2();
    void thread_icmp_ln1496_fu_130_p2();
    void thread_select_ln86_10_fu_192_p3();
    void thread_select_ln86_11_fu_206_p3();
    void thread_select_ln86_12_fu_220_p3();
    void thread_select_ln86_13_fu_234_p3();
    void thread_select_ln86_14_fu_248_p3();
    void thread_select_ln86_15_fu_262_p3();
    void thread_select_ln86_16_fu_276_p3();
    void thread_select_ln86_17_fu_290_p3();
    void thread_select_ln86_18_fu_304_p3();
    void thread_select_ln86_19_fu_318_p3();
    void thread_select_ln86_20_fu_330_p3();
    void thread_select_ln86_7_fu_150_p3();
    void thread_select_ln86_8_fu_164_p3();
    void thread_select_ln86_9_fu_178_p3();
    void thread_select_ln86_fu_136_p3();
};

}

using namespace ap_rtl;

#endif
