// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::ap_const_logic_1 = sc_dt::Log_1;
const bool reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::ap_const_boolean_1 = true;
const sc_logic reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::ap_const_logic_0 = sc_dt::Log_0;

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( select_ln86_2_fu_100_p3 );
    sensitive << ( select_ln86_5_fu_142_p3 );
    sensitive << ( icmp_ln1496_6_fu_150_p2 );

    SC_METHOD(thread_icmp_ln1496_1_fu_80_p2);
    sensitive << ( x_2_V_read );
    sensitive << ( x_3_V_read );

    SC_METHOD(thread_icmp_ln1496_2_fu_94_p2);
    sensitive << ( select_ln86_fu_72_p3 );
    sensitive << ( select_ln86_1_fu_86_p3 );

    SC_METHOD(thread_icmp_ln1496_3_fu_108_p2);
    sensitive << ( x_4_V_read );
    sensitive << ( x_5_V_read );

    SC_METHOD(thread_icmp_ln1496_4_fu_122_p2);
    sensitive << ( x_6_V_read );
    sensitive << ( x_7_V_read );

    SC_METHOD(thread_icmp_ln1496_5_fu_136_p2);
    sensitive << ( select_ln86_3_fu_114_p3 );
    sensitive << ( select_ln86_4_fu_128_p3 );

    SC_METHOD(thread_icmp_ln1496_6_fu_150_p2);
    sensitive << ( select_ln86_2_fu_100_p3 );
    sensitive << ( select_ln86_5_fu_142_p3 );

    SC_METHOD(thread_icmp_ln1496_fu_66_p2);
    sensitive << ( x_0_V_read );
    sensitive << ( x_1_V_read );

    SC_METHOD(thread_select_ln86_1_fu_86_p3);
    sensitive << ( x_2_V_read );
    sensitive << ( x_3_V_read );
    sensitive << ( icmp_ln1496_1_fu_80_p2 );

    SC_METHOD(thread_select_ln86_2_fu_100_p3);
    sensitive << ( select_ln86_fu_72_p3 );
    sensitive << ( select_ln86_1_fu_86_p3 );
    sensitive << ( icmp_ln1496_2_fu_94_p2 );

    SC_METHOD(thread_select_ln86_3_fu_114_p3);
    sensitive << ( x_4_V_read );
    sensitive << ( x_5_V_read );
    sensitive << ( icmp_ln1496_3_fu_108_p2 );

    SC_METHOD(thread_select_ln86_4_fu_128_p3);
    sensitive << ( x_6_V_read );
    sensitive << ( x_7_V_read );
    sensitive << ( icmp_ln1496_4_fu_122_p2 );

    SC_METHOD(thread_select_ln86_5_fu_142_p3);
    sensitive << ( select_ln86_3_fu_114_p3 );
    sensitive << ( select_ln86_4_fu_128_p3 );
    sensitive << ( icmp_ln1496_5_fu_136_p2 );

    SC_METHOD(thread_select_ln86_fu_72_p3);
    sensitive << ( x_0_V_read );
    sensitive << ( x_1_V_read );
    sensitive << ( icmp_ln1496_fu_66_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_0_V_read, "(port)x_0_V_read");
    sc_trace(mVcdFile, x_1_V_read, "(port)x_1_V_read");
    sc_trace(mVcdFile, x_2_V_read, "(port)x_2_V_read");
    sc_trace(mVcdFile, x_3_V_read, "(port)x_3_V_read");
    sc_trace(mVcdFile, x_4_V_read, "(port)x_4_V_read");
    sc_trace(mVcdFile, x_5_V_read, "(port)x_5_V_read");
    sc_trace(mVcdFile, x_6_V_read, "(port)x_6_V_read");
    sc_trace(mVcdFile, x_7_V_read, "(port)x_7_V_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, icmp_ln1496_fu_66_p2, "icmp_ln1496_fu_66_p2");
    sc_trace(mVcdFile, icmp_ln1496_1_fu_80_p2, "icmp_ln1496_1_fu_80_p2");
    sc_trace(mVcdFile, select_ln86_fu_72_p3, "select_ln86_fu_72_p3");
    sc_trace(mVcdFile, select_ln86_1_fu_86_p3, "select_ln86_1_fu_86_p3");
    sc_trace(mVcdFile, icmp_ln1496_2_fu_94_p2, "icmp_ln1496_2_fu_94_p2");
    sc_trace(mVcdFile, icmp_ln1496_3_fu_108_p2, "icmp_ln1496_3_fu_108_p2");
    sc_trace(mVcdFile, icmp_ln1496_4_fu_122_p2, "icmp_ln1496_4_fu_122_p2");
    sc_trace(mVcdFile, select_ln86_3_fu_114_p3, "select_ln86_3_fu_114_p3");
    sc_trace(mVcdFile, select_ln86_4_fu_128_p3, "select_ln86_4_fu_128_p3");
    sc_trace(mVcdFile, icmp_ln1496_5_fu_136_p2, "icmp_ln1496_5_fu_136_p2");
    sc_trace(mVcdFile, select_ln86_2_fu_100_p3, "select_ln86_2_fu_100_p3");
    sc_trace(mVcdFile, select_ln86_5_fu_142_p3, "select_ln86_5_fu_142_p3");
    sc_trace(mVcdFile, icmp_ln1496_6_fu_150_p2, "icmp_ln1496_6_fu_150_p2");
#endif

    }
}

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::~reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_ap_return() {
    ap_return = (!icmp_ln1496_6_fu_150_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_6_fu_150_p2.read()[0].to_bool())? select_ln86_5_fu_142_p3.read(): select_ln86_2_fu_100_p3.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_1_fu_80_p2() {
    icmp_ln1496_1_fu_80_p2 = (!x_2_V_read.read().is_01() || !x_3_V_read.read().is_01())? sc_lv<1>(): (sc_bigint<27>(x_2_V_read.read()) < sc_bigint<27>(x_3_V_read.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_2_fu_94_p2() {
    icmp_ln1496_2_fu_94_p2 = (!select_ln86_fu_72_p3.read().is_01() || !select_ln86_1_fu_86_p3.read().is_01())? sc_lv<1>(): (sc_bigint<27>(select_ln86_fu_72_p3.read()) < sc_bigint<27>(select_ln86_1_fu_86_p3.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_3_fu_108_p2() {
    icmp_ln1496_3_fu_108_p2 = (!x_4_V_read.read().is_01() || !x_5_V_read.read().is_01())? sc_lv<1>(): (sc_bigint<27>(x_4_V_read.read()) < sc_bigint<27>(x_5_V_read.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_4_fu_122_p2() {
    icmp_ln1496_4_fu_122_p2 = (!x_6_V_read.read().is_01() || !x_7_V_read.read().is_01())? sc_lv<1>(): (sc_bigint<27>(x_6_V_read.read()) < sc_bigint<27>(x_7_V_read.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_5_fu_136_p2() {
    icmp_ln1496_5_fu_136_p2 = (!select_ln86_3_fu_114_p3.read().is_01() || !select_ln86_4_fu_128_p3.read().is_01())? sc_lv<1>(): (sc_bigint<27>(select_ln86_3_fu_114_p3.read()) < sc_bigint<27>(select_ln86_4_fu_128_p3.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_6_fu_150_p2() {
    icmp_ln1496_6_fu_150_p2 = (!select_ln86_2_fu_100_p3.read().is_01() || !select_ln86_5_fu_142_p3.read().is_01())? sc_lv<1>(): (sc_bigint<27>(select_ln86_2_fu_100_p3.read()) < sc_bigint<27>(select_ln86_5_fu_142_p3.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_icmp_ln1496_fu_66_p2() {
    icmp_ln1496_fu_66_p2 = (!x_0_V_read.read().is_01() || !x_1_V_read.read().is_01())? sc_lv<1>(): (sc_bigint<27>(x_0_V_read.read()) < sc_bigint<27>(x_1_V_read.read()));
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_1_fu_86_p3() {
    select_ln86_1_fu_86_p3 = (!icmp_ln1496_1_fu_80_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_1_fu_80_p2.read()[0].to_bool())? x_3_V_read.read(): x_2_V_read.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_2_fu_100_p3() {
    select_ln86_2_fu_100_p3 = (!icmp_ln1496_2_fu_94_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_2_fu_94_p2.read()[0].to_bool())? select_ln86_1_fu_86_p3.read(): select_ln86_fu_72_p3.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_3_fu_114_p3() {
    select_ln86_3_fu_114_p3 = (!icmp_ln1496_3_fu_108_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_3_fu_108_p2.read()[0].to_bool())? x_5_V_read.read(): x_4_V_read.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_4_fu_128_p3() {
    select_ln86_4_fu_128_p3 = (!icmp_ln1496_4_fu_122_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_4_fu_122_p2.read()[0].to_bool())? x_7_V_read.read(): x_6_V_read.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_5_fu_142_p3() {
    select_ln86_5_fu_142_p3 = (!icmp_ln1496_5_fu_136_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_5_fu_136_p2.read()[0].to_bool())? select_ln86_4_fu_128_p3.read(): select_ln86_3_fu_114_p3.read());
}

void reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s::thread_select_ln86_fu_72_p3() {
    select_ln86_fu_72_p3 = (!icmp_ln1496_fu_66_p2.read()[0].is_01())? sc_lv<27>(): ((icmp_ln1496_fu_66_p2.read()[0].to_bool())? x_1_V_read.read(): x_0_V_read.read());
}

}

