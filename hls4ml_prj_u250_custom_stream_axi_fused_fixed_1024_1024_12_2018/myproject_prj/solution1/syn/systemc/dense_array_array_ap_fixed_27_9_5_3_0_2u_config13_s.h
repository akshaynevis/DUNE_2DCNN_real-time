// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s_HH_
#define _dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s.h"

namespace ap_rtl {

struct dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s : public sc_module {
    // Port declarations 52
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<27> > data_stream_V_data_0_V_dout;
    sc_in< sc_logic > data_stream_V_data_0_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_0_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_1_V_dout;
    sc_in< sc_logic > data_stream_V_data_1_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_1_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_2_V_dout;
    sc_in< sc_logic > data_stream_V_data_2_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_2_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_3_V_dout;
    sc_in< sc_logic > data_stream_V_data_3_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_3_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_4_V_dout;
    sc_in< sc_logic > data_stream_V_data_4_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_4_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_5_V_dout;
    sc_in< sc_logic > data_stream_V_data_5_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_5_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_6_V_dout;
    sc_in< sc_logic > data_stream_V_data_6_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_6_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_7_V_dout;
    sc_in< sc_logic > data_stream_V_data_7_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_7_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_8_V_dout;
    sc_in< sc_logic > data_stream_V_data_8_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_8_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_9_V_dout;
    sc_in< sc_logic > data_stream_V_data_9_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_9_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_10_V_dout;
    sc_in< sc_logic > data_stream_V_data_10_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_10_V_read;
    sc_in< sc_lv<27> > data_stream_V_data_11_V_dout;
    sc_in< sc_logic > data_stream_V_data_11_V_empty_n;
    sc_out< sc_logic > data_stream_V_data_11_V_read;
    sc_out< sc_lv<27> > res_stream_V_data_0_V_din;
    sc_in< sc_logic > res_stream_V_data_0_V_full_n;
    sc_out< sc_logic > res_stream_V_data_0_V_write;
    sc_out< sc_lv<27> > res_stream_V_data_1_V_din;
    sc_in< sc_logic > res_stream_V_data_1_V_full_n;
    sc_out< sc_logic > res_stream_V_data_1_V_write;


    // Module declarations
    dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s(sc_module_name name);
    SC_HAS_PROCESS(dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s);

    ~dense_array_array_ap_fixed_27_9_5_3_0_2u_config13_s();

    sc_trace_file* mVcdFile;

    dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s* call_ret_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s_fu_90;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_3_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_4_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_5_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_6_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_7_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_8_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_9_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_10_V_blk_n;
    sc_signal< sc_logic > data_stream_V_data_11_V_blk_n;
    sc_signal< sc_logic > res_stream_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > res_stream_V_data_1_V_blk_n;
    sc_signal< sc_lv<27> > data_2_V_reg_137;
    sc_signal< sc_logic > io_acc_block_signal_op4;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<27> > data_4_V_reg_142;
    sc_signal< sc_lv<27> > data_6_V_reg_147;
    sc_signal< sc_lv<27> > data_7_V_reg_152;
    sc_signal< sc_lv<27> > data_8_V_reg_157;
    sc_signal< sc_lv<27> > data_9_V_reg_162;
    sc_signal< sc_lv<27> > data_10_V_reg_167;
    sc_signal< sc_lv<27> > res_0_V_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<27> > res_1_V_reg_177;
    sc_signal< sc_logic > call_ret_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s_fu_90_ap_ready;
    sc_signal< sc_lv<27> > call_ret_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s_fu_90_ap_return_0;
    sc_signal< sc_lv<27> > call_ret_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config13_s_fu_90_ap_return_1;
    sc_signal< sc_logic > io_acc_block_signal_op31;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_data_stream_V_data_0_V_blk_n();
    void thread_data_stream_V_data_0_V_read();
    void thread_data_stream_V_data_10_V_blk_n();
    void thread_data_stream_V_data_10_V_read();
    void thread_data_stream_V_data_11_V_blk_n();
    void thread_data_stream_V_data_11_V_read();
    void thread_data_stream_V_data_1_V_blk_n();
    void thread_data_stream_V_data_1_V_read();
    void thread_data_stream_V_data_2_V_blk_n();
    void thread_data_stream_V_data_2_V_read();
    void thread_data_stream_V_data_3_V_blk_n();
    void thread_data_stream_V_data_3_V_read();
    void thread_data_stream_V_data_4_V_blk_n();
    void thread_data_stream_V_data_4_V_read();
    void thread_data_stream_V_data_5_V_blk_n();
    void thread_data_stream_V_data_5_V_read();
    void thread_data_stream_V_data_6_V_blk_n();
    void thread_data_stream_V_data_6_V_read();
    void thread_data_stream_V_data_7_V_blk_n();
    void thread_data_stream_V_data_7_V_read();
    void thread_data_stream_V_data_8_V_blk_n();
    void thread_data_stream_V_data_8_V_read();
    void thread_data_stream_V_data_9_V_blk_n();
    void thread_data_stream_V_data_9_V_read();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op31();
    void thread_io_acc_block_signal_op4();
    void thread_real_start();
    void thread_res_stream_V_data_0_V_blk_n();
    void thread_res_stream_V_data_0_V_din();
    void thread_res_stream_V_data_0_V_write();
    void thread_res_stream_V_data_1_V_blk_n();
    void thread_res_stream_V_data_1_V_din();
    void thread_res_stream_V_data_1_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
