-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_array_ap_fixed_8u_config4_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_V_empty_n : IN STD_LOGIC;
    data_V_data_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_array_ap_fixed_8u_config4_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv18_26000 : STD_LOGIC_VECTOR (17 downto 0) := "100110000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv24_FFC800 : STD_LOGIC_VECTOR (23 downto 0) := "111111111100100000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv23_7FD800 : STD_LOGIC_VECTOR (22 downto 0) := "11111111101100000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv24_FF9000 : STD_LOGIC_VECTOR (23 downto 0) := "111111111001000000000000";
    constant ap_const_lv24_FFC000 : STD_LOGIC_VECTOR (23 downto 0) := "111111111100000000000000";
    constant ap_const_lv21_1FD800 : STD_LOGIC_VECTOR (20 downto 0) := "111111101100000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv24_FFF800 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111100000000000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv24_FFF000 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111000000000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv12_8C3 : STD_LOGIC_VECTOR (11 downto 0) := "100011000011";
    constant ap_const_lv22_2A : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000101010";
    constant ap_const_lv22_36 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000110110";
    constant ap_const_lv22_3FFFE3 : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111100011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_1_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal kernel_data_V_1_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal data_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal and_ln272_2_reg_1640 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal kernel_data_V_1_6_ret_reg_1540 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_3_ret_reg_1548 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_0_ret_reg_1555 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_1_ret_reg_1562 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_2_ret_reg_1570 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_4_ret_reg_1579 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_5_ret_reg_1587 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_7_ret_reg_1596 : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_1_8_ret_reg_1602 : STD_LOGIC_VECTOR (15 downto 0);
    signal sX_2_load_reg_1608 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln272_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal sY_2_load_reg_1618 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln272_1_fu_337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_1_reg_1623 : STD_LOGIC_VECTOR (0 downto 0);
    signal pY_2_load_reg_1628 : STD_LOGIC_VECTOR (31 downto 0);
    signal pX_2_load_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln272_2_fu_395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln78_fu_401_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln78_reg_1644 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln728_3_fu_466_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln728_3_reg_1649 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_data_0_V_4_fu_470_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_data_0_V_4_reg_1654 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln728_4_fu_568_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_4_reg_1659 : STD_LOGIC_VECTOR (22 downto 0);
    signal acc_2_V_fu_665_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_2_V_reg_1664 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_392_fu_678_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln703_392_reg_1669 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_189_fu_695_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_189_reg_1674 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_176_fu_712_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_176_reg_1679 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln703_396_fu_780_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_396_reg_1684 : STD_LOGIC_VECTOR (23 downto 0);
    signal acc_4_V_fu_825_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_4_V_reg_1689 : STD_LOGIC_VECTOR (24 downto 0);
    signal acc_5_V_fu_929_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_5_V_reg_1694 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_6_V_fu_1055_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_6_V_reg_1699 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_7_V_fu_1299_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_7_V_reg_1704 : STD_LOGIC_VECTOR (25 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal indvar_flatten6_reg_180 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal io_acc_block_signal_op257 : STD_LOGIC;
    signal ap_block_state4 : BOOLEAN;
    signal icmp_ln78_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln303_fu_1478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_storemerge_i_i_phi_fu_198_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln293_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln297_fu_1457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln306_fu_1416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln308_fu_1432_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln301_fu_1462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_347_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_2_fu_367_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln272_2_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_3_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_1_fu_389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln272_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_407_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln728_fu_414_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln703_fu_418_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1506_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1_fu_437_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_fu_444_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_1_fu_434_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_fu_448_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_1_fu_454_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_8_fu_431_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln728_2_fu_462_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_s_fu_479_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_1_fu_486_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_2_fu_476_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_173_fu_490_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_2_fu_496_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln728_4_fu_504_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_385_fu_508_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_3_fu_524_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1515_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_1_fu_535_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_11_fu_514_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_387_fu_538_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_106_fu_551_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_3_fu_558_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_4_fu_548_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_174_fu_562_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_107_fu_589_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1118_7_fu_596_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_8_fu_600_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln1118_fu_604_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal shl_ln728_5_fu_610_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_9_fu_625_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln1118_175_fu_628_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln728_6_fu_634_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_12_fu_544_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln728_5_fu_576_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln1116_8_fu_618_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_169_fu_642_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln703_389_fu_652_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1524_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_171_fu_662_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln703_388_fu_646_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal mul_ln1118_fu_1533_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_7_fu_671_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_684_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_2_fu_521_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1118_10_fu_691_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_108_fu_701_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_11_fu_708_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1118_4_fu_583_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln1118_109_fu_718_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_12_fu_725_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_6_fu_622_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_177_fu_729_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_s_fu_735_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_110_fu_747_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_14_fu_754_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_fu_428_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_178_fu_758_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_9_fu_764_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln1118_13_fu_743_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln703_2_fu_776_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_111_fu_786_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_15_fu_793_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1116_3_fu_518_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_179_fu_797_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_10_fu_803_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln728_9_fu_811_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_398_fu_815_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_18_fu_821_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln728_8_fu_772_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_400_fu_831_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1118_16_fu_841_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_180_fu_845_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_11_fu_851_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_20_fu_837_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln728_10_fu_859_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_401_fu_863_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_112_fu_879_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1118_18_fu_886_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln703_fu_531_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_181_fu_890_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_12_fu_896_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_13_fu_908_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln728_11_fu_904_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln703_4_fu_915_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_402_fu_919_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln703_5_fu_925_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln703_21_fu_869_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_113_fu_935_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_19_fu_942_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1118_17_fu_876_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln1118_16_fu_946_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln728_14_fu_952_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln728_12_fu_960_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln703_404_fu_964_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln728_15_fu_974_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln703_23_fu_970_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln728_13_fu_981_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_405_fu_985_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_114_fu_995_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_115_fu_1006_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_20_fu_1002_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1118_21_fu_1013_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_182_fu_1017_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_16_fu_1023_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln728_14_fu_1031_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_24_fu_991_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_406_fu_1035_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_407_fu_1045_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln703_6_fu_1051_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln703_25_fu_1041_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1118_116_fu_1061_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln1118_22_fu_1068_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_183_fu_1072_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_17_fu_1078_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1118_184_fu_1090_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_18_fu_1096_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln728_15_fu_1086_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_409_fu_1108_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln728_1_fu_1104_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_410_fu_1114_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1116_7_fu_873_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_185_fu_1124_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_19_fu_1130_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln1118_117_fu_1142_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln1118_23_fu_1149_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln1118_186_fu_1153_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln728_20_fu_1159_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_190_fu_1171_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln728_21_fu_1177_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln1118_6_fu_586_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln1118_24_fu_1189_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_191_fu_1193_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln728_22_fu_1199_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1118_187_fu_1211_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_23_fu_1217_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln728_16_fu_1138_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln728_2_fu_1225_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_411_fu_1229_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_27_fu_1120_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_289_fu_1207_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln1118_fu_1167_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln703_413_fu_1241_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln703_177_fu_1247_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_288_fu_1185_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln703_414_fu_1251_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln703_178_fu_1257_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_412_fu_1235_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_415_fu_1261_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1118_188_fu_1271_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_24_fu_1277_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_179_fu_1285_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_416_fu_1289_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln703_180_fu_1295_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln703_28_fu_1267_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_1_V_fu_1309_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_8_fu_1329_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln728_6_fu_1319_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln728_fu_1336_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_393_fu_1340_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln703_14_fu_1326_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln703_394_fu_1346_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_s_fu_1356_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln728_3_fu_1363_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln703_15_fu_1352_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln728_7_fu_1367_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln703_395_fu_1371_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln703_3_fu_1381_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln703_16_fu_1377_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal acc_3_V_fu_1384_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln308_fu_1427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln303_fu_1473_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1506_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1506_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1515_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1515_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1515_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1524_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1524_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln1118_fu_1533_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1118_fu_1533_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1524_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_211 : BOOLEAN;
    signal ap_condition_269 : BOOLEAN;

    component shift_line_buffer_array_ap_ufixed_1u_config4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_1_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_2_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_4_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_5_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_7_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component myproject_axi_mac_muladd_16ns_7ns_18s_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component myproject_axi_mac_muladd_16ns_7ns_17ns_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (16 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component myproject_axi_mac_muladd_16ns_7ns_23s_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_axi_mul_mul_16ns_6s_22_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;



begin
    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205 : component shift_line_buffer_array_ap_ufixed_1u_config4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_ready,
        in_elem_data_V_read => data_V_data_V_dout,
        kernel_window_1_V_read => kernel_data_V_1_1,
        kernel_window_2_V_read => kernel_data_V_1_2,
        kernel_window_4_V_read => kernel_data_V_1_4,
        kernel_window_5_V_read => kernel_data_V_1_5,
        kernel_window_7_V_read => kernel_data_V_1_7,
        kernel_window_8_V_read => kernel_data_V_1_8,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8);

    myproject_axi_mac_muladd_16ns_7ns_18s_23_1_1_U19 : component myproject_axi_mac_muladd_16ns_7ns_18s_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 18,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_1506_p0,
        din1 => grp_fu_1506_p1,
        din2 => add_ln703_fu_418_p2,
        dout => grp_fu_1506_p3);

    myproject_axi_mac_muladd_16ns_7ns_17ns_22_1_1_U20 : component myproject_axi_mac_muladd_16ns_7ns_17ns_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 17,
        dout_WIDTH => 22)
    port map (
        din0 => grp_fu_1515_p0,
        din1 => grp_fu_1515_p1,
        din2 => grp_fu_1515_p2,
        dout => grp_fu_1515_p3);

    myproject_axi_mac_muladd_16ns_7ns_23s_24_1_1_U21 : component myproject_axi_mac_muladd_16ns_7ns_23s_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 23,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_1524_p0,
        din1 => grp_fu_1524_p1,
        din2 => add_ln703_389_fu_652_p2,
        dout => grp_fu_1524_p3);

    myproject_axi_mul_mul_16ns_6s_22_1_1_U22 : component myproject_axi_mul_mul_16ns_6s_22_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 6,
        dout_WIDTH => 22)
    port map (
        din0 => mul_ln1118_fu_1533_p0,
        din1 => mul_ln1118_fu_1533_p1,
        dout => mul_ln1118_fu_1533_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_reg_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten6_reg_180 <= add_ln78_reg_1644;
            elsif (((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_1)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten6_reg_180 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    pX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_211)) then
                if ((icmp_ln293_fu_1411_p2 = ap_const_lv1_1)) then 
                    pX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln293_fu_1411_p2 = ap_const_lv1_0)) then 
                    pX_2 <= add_ln306_fu_1416_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_269)) then
                if ((icmp_ln297_fu_1457_p2 = ap_const_lv1_1)) then 
                    pY_2 <= ap_const_lv32_0;
                elsif ((icmp_ln297_fu_1457_p2 = ap_const_lv1_0)) then 
                    pY_2 <= add_ln301_fu_1462_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_211)) then
                if ((icmp_ln293_fu_1411_p2 = ap_const_lv1_1)) then 
                    sX_2 <= ap_const_lv32_0;
                elsif ((icmp_ln293_fu_1411_p2 = ap_const_lv1_0)) then 
                    sX_2 <= select_ln308_fu_1432_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                acc_2_V_reg_1664 <= acc_2_V_fu_665_p2;
                    acc_4_V_reg_1689(24 downto 1) <= acc_4_V_fu_825_p2(24 downto 1);
                    acc_5_V_reg_1694(25 downto 1) <= acc_5_V_fu_929_p2(25 downto 1);
                    acc_6_V_reg_1699(25 downto 1) <= acc_6_V_fu_1055_p2(25 downto 1);
                    acc_7_V_reg_1704(25 downto 1) <= acc_7_V_fu_1299_p2(25 downto 1);
                    add_ln703_392_reg_1669(22 downto 1) <= add_ln703_392_fu_678_p2(22 downto 1);
                    add_ln703_396_reg_1684(23 downto 1) <= add_ln703_396_fu_780_p2(23 downto 1);
                    shl_ln728_4_reg_1659(22 downto 1) <= shl_ln728_4_fu_568_p3(22 downto 1);
                sub_ln1118_176_reg_1679 <= sub_ln1118_176_fu_712_p2;
                sub_ln1118_189_reg_1674 <= sub_ln1118_189_fu_695_p2;
                tmp_data_0_V_4_reg_1654 <= tmp_data_0_V_4_fu_470_p2;
                    zext_ln728_3_reg_1649(22 downto 1) <= zext_ln728_3_fu_466_p1(22 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln78_reg_1644 <= add_ln78_fu_401_p2;
                and_ln272_2_reg_1640 <= and_ln272_2_fu_395_p2;
                icmp_ln272_1_reg_1623 <= icmp_ln272_1_fu_337_p2;
                icmp_ln272_reg_1613 <= icmp_ln272_fu_327_p2;
                kernel_data_V_1_0_ret_reg_1555 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_0;
                kernel_data_V_1_1 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3;
                kernel_data_V_1_1_ret_reg_1562 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_3;
                kernel_data_V_1_2 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4;
                kernel_data_V_1_2_ret_reg_1570 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_4;
                kernel_data_V_1_3_ret_reg_1548 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_1;
                kernel_data_V_1_4 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5;
                kernel_data_V_1_4_ret_reg_1579 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_5;
                kernel_data_V_1_5 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6;
                kernel_data_V_1_5_ret_reg_1587 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_6;
                kernel_data_V_1_6_ret_reg_1540 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_2;
                kernel_data_V_1_7 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7;
                kernel_data_V_1_7_ret_reg_1596 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_7;
                kernel_data_V_1_8 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8;
                kernel_data_V_1_8_ret_reg_1602 <= call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_return_8;
                pX_2_load_reg_1634 <= pX_2;
                pY_2_load_reg_1628 <= pY_2;
                sX_2_load_reg_1608 <= sX_2;
                sY_2_load_reg_1618 <= sY_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln293_fu_1411_p2 = ap_const_lv1_1))) then
                sY_2 <= ap_phi_mux_storemerge_i_i_phi_fu_198_p4;
            end if;
        end if;
    end process;
    zext_ln728_3_reg_1649(0) <= '0';
    zext_ln728_3_reg_1649(23) <= '0';
    shl_ln728_4_reg_1659(0) <= '0';
    add_ln703_392_reg_1669(0) <= '0';
    add_ln703_396_reg_1684(0) <= '0';
    acc_4_V_reg_1689(0) <= '0';
    acc_5_V_reg_1694(0) <= '0';
    acc_6_V_reg_1699(0) <= '0';
    acc_7_V_reg_1704(0) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, data_V_data_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state4, and_ln272_2_reg_1640, and_ln272_2_fu_395_p2, io_acc_block_signal_op257, icmp_ln78_fu_1498_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln272_2_fu_395_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln272_2_fu_395_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    acc_1_V_fu_1309_p2 <= std_logic_vector(unsigned(zext_ln728_3_reg_1649) + unsigned(ap_const_lv24_FFF000));
    acc_2_V_fu_665_p2 <= std_logic_vector(signed(sext_ln703_171_fu_662_p1) + signed(add_ln703_388_fu_646_p2));
    acc_3_V_fu_1384_p2 <= std_logic_vector(unsigned(zext_ln703_3_fu_1381_p1) + unsigned(sext_ln703_16_fu_1377_p1));
    acc_4_V_fu_825_p2 <= std_logic_vector(signed(sext_ln703_18_fu_821_p1) + signed(zext_ln728_8_fu_772_p1));
    acc_5_V_fu_929_p2 <= std_logic_vector(unsigned(zext_ln703_5_fu_925_p1) + unsigned(sext_ln703_21_fu_869_p1));
    acc_6_V_fu_1055_p2 <= std_logic_vector(unsigned(zext_ln703_6_fu_1051_p1) + unsigned(sext_ln703_25_fu_1041_p1));
    acc_7_V_fu_1299_p2 <= std_logic_vector(signed(sext_ln703_180_fu_1295_p1) + signed(sext_ln703_28_fu_1267_p1));
    add_ln1118_16_fu_946_p2 <= std_logic_vector(unsigned(zext_ln1118_19_fu_942_p1) + unsigned(zext_ln1118_17_fu_876_p1));
    add_ln1118_fu_604_p2 <= std_logic_vector(unsigned(zext_ln1118_7_fu_596_p1) + unsigned(zext_ln1118_8_fu_600_p1));
    add_ln301_fu_1462_p2 <= std_logic_vector(unsigned(pY_2_load_reg_1628) + unsigned(ap_const_lv32_1));
    add_ln303_fu_1473_p2 <= std_logic_vector(unsigned(sY_2_load_reg_1618) + unsigned(ap_const_lv32_1));
    add_ln306_fu_1416_p2 <= std_logic_vector(unsigned(pX_2_load_reg_1634) + unsigned(ap_const_lv32_1));
    add_ln308_fu_1427_p2 <= std_logic_vector(unsigned(sX_2_load_reg_1608) + unsigned(ap_const_lv32_1));
    add_ln703_385_fu_508_p2 <= std_logic_vector(unsigned(zext_ln728_4_fu_504_p1) + unsigned(ap_const_lv24_FFC800));
    add_ln703_387_fu_538_p2 <= std_logic_vector(unsigned(zext_ln703_1_fu_535_p1) + unsigned(sext_ln703_11_fu_514_p1));
    add_ln703_388_fu_646_p2 <= std_logic_vector(signed(sext_ln703_12_fu_544_p1) + signed(zext_ln728_5_fu_576_p1));
    add_ln703_389_fu_652_p2 <= std_logic_vector(unsigned(zext_ln1116_8_fu_618_p1) + unsigned(sext_ln703_169_fu_642_p1));
    add_ln703_392_fu_678_p2 <= std_logic_vector(unsigned(shl_ln728_7_fu_671_p3) + unsigned(ap_const_lv23_7FD800));
    add_ln703_393_fu_1340_p2 <= std_logic_vector(unsigned(zext_ln728_6_fu_1319_p1) + unsigned(sext_ln728_fu_1336_p1));
    add_ln703_394_fu_1346_p2 <= std_logic_vector(unsigned(add_ln703_393_fu_1340_p2) + unsigned(sext_ln703_14_fu_1326_p1));
    add_ln703_395_fu_1371_p2 <= std_logic_vector(signed(sext_ln703_15_fu_1352_p1) + signed(zext_ln728_7_fu_1367_p1));
    add_ln703_396_fu_780_p2 <= std_logic_vector(unsigned(zext_ln1118_13_fu_743_p1) + unsigned(zext_ln703_2_fu_776_p1));
    add_ln703_398_fu_815_p2 <= std_logic_vector(unsigned(zext_ln728_9_fu_811_p1) + unsigned(ap_const_lv24_FF9000));
    add_ln703_400_fu_831_p2 <= std_logic_vector(unsigned(zext_ln728_4_fu_504_p1) + unsigned(ap_const_lv24_FFC000));
    add_ln703_401_fu_863_p2 <= std_logic_vector(signed(sext_ln703_20_fu_837_p1) + signed(zext_ln728_10_fu_859_p1));
    add_ln703_402_fu_919_p2 <= std_logic_vector(unsigned(zext_ln728_11_fu_904_p1) + unsigned(zext_ln703_4_fu_915_p1));
    add_ln703_404_fu_964_p2 <= std_logic_vector(unsigned(zext_ln728_12_fu_960_p1) + unsigned(ap_const_lv21_1FD800));
    add_ln703_405_fu_985_p2 <= std_logic_vector(signed(sext_ln703_23_fu_970_p1) + signed(zext_ln728_13_fu_981_p1));
    add_ln703_406_fu_1035_p2 <= std_logic_vector(unsigned(zext_ln728_14_fu_1031_p1) + unsigned(sext_ln703_24_fu_991_p1));
    add_ln703_407_fu_1045_p2 <= std_logic_vector(unsigned(zext_ln703_2_fu_776_p1) + unsigned(zext_ln728_3_fu_466_p1));
    add_ln703_409_fu_1108_p2 <= std_logic_vector(unsigned(zext_ln728_15_fu_1086_p1) + unsigned(ap_const_lv24_FFF800));
    add_ln703_410_fu_1114_p2 <= std_logic_vector(unsigned(add_ln703_409_fu_1108_p2) + unsigned(sext_ln728_1_fu_1104_p1));
    add_ln703_411_fu_1229_p2 <= std_logic_vector(unsigned(zext_ln728_16_fu_1138_p1) + unsigned(sext_ln728_2_fu_1225_p1));
    add_ln703_412_fu_1235_p2 <= std_logic_vector(unsigned(add_ln703_411_fu_1229_p2) + unsigned(sext_ln703_27_fu_1120_p1));
    add_ln703_413_fu_1241_p2 <= std_logic_vector(signed(sext_ln1118_289_fu_1207_p1) + signed(sext_ln1118_fu_1167_p1));
    add_ln703_414_fu_1251_p2 <= std_logic_vector(signed(sext_ln703_177_fu_1247_p1) + signed(sext_ln1118_288_fu_1185_p1));
    add_ln703_415_fu_1261_p2 <= std_logic_vector(signed(sext_ln703_178_fu_1257_p1) + signed(add_ln703_412_fu_1235_p2));
    add_ln703_416_fu_1289_p2 <= std_logic_vector(unsigned(zext_ln728_8_fu_772_p1) + unsigned(sext_ln703_179_fu_1285_p1));
    add_ln703_fu_418_p2 <= std_logic_vector(unsigned(zext_ln728_fu_414_p1) + unsigned(ap_const_lv18_26000));
    add_ln78_fu_401_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_180) + unsigned(ap_const_lv12_1));
    and_ln272_1_fu_389_p2 <= (icmp_ln272_3_fu_377_p2 and icmp_ln272_2_fu_357_p2);
    and_ln272_2_fu_395_p2 <= (and_ln272_fu_383_p2 and and_ln272_1_fu_389_p2);
    and_ln272_fu_383_p2 <= (icmp_ln272_fu_327_p2 and icmp_ln272_1_fu_337_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state4_assign_proc : process(and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
                ap_block_state4 <= ((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0));
    end process;


    ap_condition_211_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
                ap_condition_211 <= (not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4));
    end process;


    ap_condition_269_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257, icmp_ln293_fu_1411_p2)
    begin
                ap_condition_269 <= (not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln293_fu_1411_p2 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257, icmp_ln78_fu_1498_p2)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_198_p4_assign_proc : process(ap_CS_fsm_state4, select_ln303_fu_1478_p3, icmp_ln293_fu_1411_p2, icmp_ln297_fu_1457_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln293_fu_1411_p2 = ap_const_lv1_1))) then
            if ((icmp_ln297_fu_1457_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_198_p4 <= ap_const_lv32_0;
            elsif ((icmp_ln297_fu_1457_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_storemerge_i_i_phi_fu_198_p4 <= select_ln303_fu_1478_p3;
            else 
                ap_phi_mux_storemerge_i_i_phi_fu_198_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_198_p4 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_ufixed_1u_config4_s_fu_205_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_V_blk_n_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            data_V_data_V_blk_n <= data_V_data_V_empty_n;
        else 
            data_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_read_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if (((data_V_data_V_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            data_V_data_V_read <= ap_const_logic_1;
        else 
            data_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1506_p0 <= zext_ln1116_fu_428_p1(16 - 1 downto 0);
    grp_fu_1506_p1 <= ap_const_lv22_2A(7 - 1 downto 0);
    grp_fu_1515_p0 <= zext_ln1116_3_fu_518_p1(16 - 1 downto 0);
    grp_fu_1515_p1 <= ap_const_lv22_36(7 - 1 downto 0);
    grp_fu_1515_p2 <= zext_ln703_fu_531_p1(17 - 1 downto 0);
    grp_fu_1524_p0 <= grp_fu_1524_p00(16 - 1 downto 0);
    grp_fu_1524_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_4_ret_reg_1579),22));
    grp_fu_1524_p1 <= ap_const_lv22_2A(7 - 1 downto 0);
    icmp_ln272_1_fu_337_p2 <= "1" when (sY_2 = ap_const_lv32_2) else "0";
    icmp_ln272_2_fu_357_p2 <= "1" when (signed(tmp_1_fu_347_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_3_fu_377_p2 <= "1" when (signed(tmp_2_fu_367_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln272_fu_327_p2 <= "1" when (sX_2 = ap_const_lv32_2) else "0";
    icmp_ln293_fu_1411_p2 <= "1" when (pX_2_load_reg_1634 = ap_const_lv32_41) else "0";
    icmp_ln297_fu_1457_p2 <= "1" when (pY_2_load_reg_1628 = ap_const_lv32_21) else "0";
    icmp_ln78_fu_1498_p2 <= "1" when (indvar_flatten6_reg_180 = ap_const_lv12_8C3) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257, icmp_ln78_fu_1498_p2)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln78_fu_1498_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op257 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    mul_ln1118_fu_1533_p0 <= zext_ln1116_2_fu_476_p1(16 - 1 downto 0);
    mul_ln1118_fu_1533_p1 <= ap_const_lv22_3FFFE3(6 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_0_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_4_reg_1654),27));


    res_V_data_0_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_1_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_1_V_fu_1309_p2),27));


    res_V_data_1_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_2_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_2_V_reg_1664),27));


    res_V_data_2_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_3_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_3_V_fu_1384_p2),27));


    res_V_data_3_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_4_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_4_V_reg_1689),27));


    res_V_data_4_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_5_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_5_V_reg_1694),27));


    res_V_data_5_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_6_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_6_V_reg_1699),27));


    res_V_data_6_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_CS_fsm_state4, and_ln272_2_reg_1640)
    begin
        if (((ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

        res_V_data_7_V_din <= std_logic_vector(IEEE.numeric_std.resize(signed(acc_7_V_reg_1704),27));


    res_V_data_7_V_write_assign_proc : process(ap_CS_fsm_state4, and_ln272_2_reg_1640, io_acc_block_signal_op257)
    begin
        if ((not(((ap_const_lv1_1 = and_ln272_2_reg_1640) and (io_acc_block_signal_op257 = ap_const_logic_0))) and (ap_const_lv1_1 = and_ln272_2_reg_1640) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln303_fu_1478_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_1_reg_1623(0) = '1') else 
        add_ln303_fu_1473_p2;
    select_ln308_fu_1432_p3 <= 
        ap_const_lv32_2 when (icmp_ln272_reg_1613(0) = '1') else 
        add_ln308_fu_1427_p2;
        sext_ln1118_288_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_21_fu_1177_p3),22));

        sext_ln1118_289_fu_1207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_22_fu_1199_p3),21));

        sext_ln1118_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_20_fu_1159_p3),21));

        sext_ln703_11_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_385_fu_508_p2),25));

        sext_ln703_12_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_387_fu_538_p2),26));

        sext_ln703_14_fu_1326_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_392_reg_1669),24));

        sext_ln703_15_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_394_fu_1346_p2),25));

        sext_ln703_169_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_6_fu_634_p3),23));

        sext_ln703_16_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_395_fu_1371_p2),26));

        sext_ln703_171_fu_662_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1524_p3),26));

        sext_ln703_177_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_413_fu_1241_p2),22));

        sext_ln703_178_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_414_fu_1251_p2),25));

        sext_ln703_179_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_24_fu_1277_p3),25));

        sext_ln703_180_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_416_fu_1289_p2),26));

        sext_ln703_18_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_398_fu_815_p2),25));

        sext_ln703_20_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_400_fu_831_p2),25));

        sext_ln703_21_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_401_fu_863_p2),26));

        sext_ln703_23_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_404_fu_964_p2),22));

        sext_ln703_24_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_405_fu_985_p2),25));

        sext_ln703_25_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_406_fu_1035_p2),26));

        sext_ln703_27_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_410_fu_1114_p2),25));

        sext_ln703_28_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_415_fu_1261_p2),26));

        sext_ln703_8_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1506_p3),25));

        sext_ln728_1_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_18_fu_1096_p3),24));

        sext_ln728_2_fu_1225_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_23_fu_1217_p3),25));

        sext_ln728_3_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1356_p3),23));

        sext_ln728_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_8_fu_1329_p3),24));

    shl_ln1118_106_fu_551_p3 <= (kernel_data_V_1_3_ret_reg_1548 & ap_const_lv5_0);
    shl_ln1118_107_fu_589_p3 <= (kernel_data_V_1_5_ret_reg_1587 & ap_const_lv3_0);
    shl_ln1118_108_fu_701_p3 <= (kernel_data_V_1_4_ret_reg_1579 & ap_const_lv2_0);
    shl_ln1118_109_fu_718_p3 <= (kernel_data_V_1_6_ret_reg_1540 & ap_const_lv5_0);
    shl_ln1118_110_fu_747_p3 <= (kernel_data_V_1_7_ret_reg_1596 & ap_const_lv5_0);
    shl_ln1118_111_fu_786_p3 <= (kernel_data_V_1_1_ret_reg_1562 & ap_const_lv5_0);
    shl_ln1118_112_fu_879_p3 <= (kernel_data_V_1_2_ret_reg_1570 & ap_const_lv5_0);
    shl_ln1118_113_fu_935_p3 <= (kernel_data_V_1_2_ret_reg_1570 & ap_const_lv2_0);
    shl_ln1118_114_fu_995_p3 <= (kernel_data_V_1_5_ret_reg_1587 & ap_const_lv5_0);
    shl_ln1118_115_fu_1006_p3 <= (kernel_data_V_1_5_ret_reg_1587 & ap_const_lv2_0);
    shl_ln1118_116_fu_1061_p3 <= (kernel_data_V_1_0_ret_reg_1555 & ap_const_lv2_0);
    shl_ln1118_117_fu_1142_p3 <= (kernel_data_V_1_3_ret_reg_1548 & ap_const_lv1_0);
    shl_ln1118_s_fu_479_p3 <= (kernel_data_V_1_0_ret_reg_1555 & ap_const_lv5_0);
    shl_ln1_fu_437_p3 <= (kernel_data_V_1_8_ret_reg_1602 & ap_const_lv5_0);
    shl_ln728_10_fu_803_p3 <= (sub_ln1118_179_fu_797_p2 & ap_const_lv1_0);
    shl_ln728_11_fu_851_p3 <= (sub_ln1118_180_fu_845_p2 & ap_const_lv1_0);
    shl_ln728_12_fu_896_p3 <= (sub_ln1118_181_fu_890_p2 & ap_const_lv1_0);
    shl_ln728_13_fu_908_p3 <= (kernel_data_V_1_6_ret_reg_1540 & ap_const_lv1_0);
    shl_ln728_14_fu_952_p3 <= (add_ln1118_16_fu_946_p2 & ap_const_lv1_0);
    shl_ln728_15_fu_974_p3 <= (kernel_data_V_1_4_ret_reg_1579 & ap_const_lv4_0);
    shl_ln728_16_fu_1023_p3 <= (sub_ln1118_182_fu_1017_p2 & ap_const_lv1_0);
    shl_ln728_17_fu_1078_p3 <= (sub_ln1118_183_fu_1072_p2 & ap_const_lv1_0);
    shl_ln728_18_fu_1096_p3 <= (sub_ln1118_184_fu_1090_p2 & ap_const_lv1_0);
    shl_ln728_19_fu_1130_p3 <= (sub_ln1118_185_fu_1124_p2 & ap_const_lv1_0);
    shl_ln728_1_fu_454_p3 <= (sub_ln1118_fu_448_p2 & ap_const_lv1_0);
    shl_ln728_20_fu_1159_p3 <= (sub_ln1118_186_fu_1153_p2 & ap_const_lv1_0);
    shl_ln728_21_fu_1177_p3 <= (sub_ln1118_190_fu_1171_p2 & ap_const_lv1_0);
    shl_ln728_22_fu_1199_p3 <= (sub_ln1118_191_fu_1193_p2 & ap_const_lv1_0);
    shl_ln728_23_fu_1217_p3 <= (sub_ln1118_187_fu_1211_p2 & ap_const_lv1_0);
    shl_ln728_24_fu_1277_p3 <= (sub_ln1118_188_fu_1271_p2 & ap_const_lv1_0);
    shl_ln728_2_fu_496_p3 <= (sub_ln1118_173_fu_490_p2 & ap_const_lv1_0);
    shl_ln728_3_fu_524_p3 <= (kernel_data_V_1_2_ret_reg_1570 & ap_const_lv1_0);
    shl_ln728_4_fu_568_p3 <= (sub_ln1118_174_fu_562_p2 & ap_const_lv1_0);
    shl_ln728_5_fu_610_p3 <= (add_ln1118_fu_604_p2 & ap_const_lv1_0);
    shl_ln728_6_fu_634_p3 <= (sub_ln1118_175_fu_628_p2 & ap_const_lv1_0);
    shl_ln728_7_fu_671_p3 <= (mul_ln1118_fu_1533_p2 & ap_const_lv1_0);
    shl_ln728_8_fu_1329_p3 <= (sub_ln1118_189_reg_1674 & ap_const_lv1_0);
    shl_ln728_9_fu_764_p3 <= (sub_ln1118_178_fu_758_p2 & ap_const_lv1_0);
    shl_ln728_s_fu_735_p3 <= (sub_ln1118_177_fu_729_p2 & ap_const_lv1_0);
    shl_ln_fu_407_p3 <= (kernel_data_V_1_5_ret_reg_1587 & ap_const_lv1_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_173_fu_490_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_486_p1) - unsigned(zext_ln1116_2_fu_476_p1));
    sub_ln1118_174_fu_562_p2 <= std_logic_vector(unsigned(zext_ln1118_3_fu_558_p1) - unsigned(zext_ln1116_4_fu_548_p1));
    sub_ln1118_175_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(zext_ln1118_9_fu_625_p1));
    sub_ln1118_176_fu_712_p2 <= std_logic_vector(unsigned(zext_ln1118_11_fu_708_p1) - unsigned(zext_ln1118_4_fu_583_p1));
    sub_ln1118_177_fu_729_p2 <= std_logic_vector(unsigned(zext_ln1118_12_fu_725_p1) - unsigned(zext_ln1116_6_fu_622_p1));
    sub_ln1118_178_fu_758_p2 <= std_logic_vector(unsigned(zext_ln1118_14_fu_754_p1) - unsigned(zext_ln1116_fu_428_p1));
    sub_ln1118_179_fu_797_p2 <= std_logic_vector(unsigned(zext_ln1118_15_fu_793_p1) - unsigned(zext_ln1116_3_fu_518_p1));
    sub_ln1118_180_fu_845_p2 <= std_logic_vector(unsigned(zext_ln1118_15_fu_793_p1) - unsigned(zext_ln1118_16_fu_841_p1));
    sub_ln1118_181_fu_890_p2 <= std_logic_vector(unsigned(zext_ln1118_18_fu_886_p1) - unsigned(zext_ln703_fu_531_p1));
    sub_ln1118_182_fu_1017_p2 <= std_logic_vector(unsigned(zext_ln1118_20_fu_1002_p1) - unsigned(zext_ln1118_21_fu_1013_p1));
    sub_ln1118_183_fu_1072_p2 <= std_logic_vector(unsigned(zext_ln1118_1_fu_486_p1) - unsigned(zext_ln1118_22_fu_1068_p1));
    sub_ln1118_184_fu_1090_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(zext_ln1118_15_fu_793_p1));
    sub_ln1118_185_fu_1124_p2 <= std_logic_vector(unsigned(zext_ln1118_18_fu_886_p1) - unsigned(zext_ln1116_7_fu_873_p1));
    sub_ln1118_186_fu_1153_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(zext_ln1118_23_fu_1149_p1));
    sub_ln1118_187_fu_1211_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(zext_ln1118_12_fu_725_p1));
    sub_ln1118_188_fu_1271_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(zext_ln1118_fu_444_p1));
    sub_ln1118_189_fu_695_p2 <= std_logic_vector(unsigned(zext_ln1118_2_fu_521_p1) - unsigned(zext_ln1118_10_fu_691_p1));
    sub_ln1118_190_fu_1171_p2 <= std_logic_vector(unsigned(zext_ln1118_4_fu_583_p1) - unsigned(zext_ln1118_11_fu_708_p1));
    sub_ln1118_191_fu_1193_p2 <= std_logic_vector(unsigned(zext_ln1118_6_fu_586_p1) - unsigned(zext_ln1118_24_fu_1189_p1));
    sub_ln1118_fu_448_p2 <= std_logic_vector(unsigned(zext_ln1118_fu_444_p1) - unsigned(zext_ln1116_1_fu_434_p1));
    tmp_1_fu_347_p4 <= pY_2(31 downto 1);
    tmp_2_fu_367_p4 <= pX_2(31 downto 1);
    tmp_data_0_V_4_fu_470_p2 <= std_logic_vector(signed(sext_ln703_8_fu_431_p1) + signed(zext_ln728_2_fu_462_p1));
    tmp_fu_684_p3 <= (kernel_data_V_1_1_ret_reg_1562 & ap_const_lv2_0);
    tmp_s_fu_1356_p3 <= (sub_ln1118_176_reg_1679 & ap_const_lv1_0);
    zext_ln1116_1_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_8_ret_reg_1602),22));
    zext_ln1116_2_fu_476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_0_ret_reg_1555),22));
    zext_ln1116_3_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_1_ret_reg_1562),22));
    zext_ln1116_4_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_3_ret_reg_1548),22));
    zext_ln1116_6_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_6_ret_reg_1540),22));
    zext_ln1116_7_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_2_ret_reg_1570),22));
    zext_ln1116_8_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_5_fu_610_p3),23));
    zext_ln1116_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_7_ret_reg_1596),22));
    zext_ln1118_10_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_684_p3),19));
    zext_ln1118_11_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_108_fu_701_p3),19));
    zext_ln1118_12_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_109_fu_718_p3),22));
    zext_ln1118_13_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_s_fu_735_p3),24));
    zext_ln1118_14_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_110_fu_747_p3),22));
    zext_ln1118_15_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_111_fu_786_p3),22));
    zext_ln1118_16_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_684_p3),22));
    zext_ln1118_17_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_2_ret_reg_1570),19));
    zext_ln1118_18_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_112_fu_879_p3),22));
    zext_ln1118_19_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_113_fu_935_p3),19));
    zext_ln1118_1_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_s_fu_479_p3),22));
    zext_ln1118_20_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_114_fu_995_p3),22));
    zext_ln1118_21_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_115_fu_1006_p3),22));
    zext_ln1118_22_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_116_fu_1061_p3),22));
    zext_ln1118_23_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_117_fu_1142_p3),18));
    zext_ln1118_24_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_115_fu_1006_p3),19));
    zext_ln1118_2_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_1_ret_reg_1562),19));
    zext_ln1118_3_fu_558_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_106_fu_551_p3),22));
    zext_ln1118_4_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_4_ret_reg_1579),19));
    zext_ln1118_6_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_5_ret_reg_1587),19));
    zext_ln1118_7_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1118_107_fu_589_p3),20));
    zext_ln1118_8_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_407_p3),20));
    zext_ln1118_9_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_data_V_1_6_ret_reg_1540),17));
    zext_ln1118_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_437_p3),22));
    zext_ln703_1_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1515_p3),25));
    zext_ln703_2_fu_776_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_9_fu_764_p3),24));
    zext_ln703_3_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_396_reg_1684),26));
    zext_ln703_4_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_13_fu_908_p3),24));
    zext_ln703_5_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_402_fu_919_p2),26));
    zext_ln703_6_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_407_fu_1045_p2),26));
    zext_ln703_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_3_fu_524_p3),22));
    zext_ln728_10_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_11_fu_851_p3),25));
    zext_ln728_11_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_12_fu_896_p3),24));
    zext_ln728_12_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_14_fu_952_p3),21));
    zext_ln728_13_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_15_fu_974_p3),22));
    zext_ln728_14_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_16_fu_1023_p3),25));
    zext_ln728_15_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_17_fu_1078_p3),24));
    zext_ln728_16_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_19_fu_1130_p3),25));
    zext_ln728_2_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_1_fu_454_p3),25));
    zext_ln728_3_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_1_fu_454_p3),24));
    zext_ln728_4_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_2_fu_496_p3),24));
    zext_ln728_5_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_4_fu_568_p3),26));
    zext_ln728_6_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_4_reg_1659),24));
    zext_ln728_7_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln728_3_fu_1363_p1),25));
    zext_ln728_8_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_9_fu_764_p3),25));
    zext_ln728_9_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_10_fu_803_p3),24));
    zext_ln728_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_407_p3),18));
end behav;
