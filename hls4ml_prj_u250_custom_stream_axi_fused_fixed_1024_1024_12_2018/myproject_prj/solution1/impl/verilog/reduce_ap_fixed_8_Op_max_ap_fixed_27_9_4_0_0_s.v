// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s (
        ap_ready,
        x_0_V_read,
        x_1_V_read,
        x_2_V_read,
        x_3_V_read,
        x_4_V_read,
        x_5_V_read,
        x_6_V_read,
        x_7_V_read,
        ap_return
);


output   ap_ready;
input  [26:0] x_0_V_read;
input  [26:0] x_1_V_read;
input  [26:0] x_2_V_read;
input  [26:0] x_3_V_read;
input  [26:0] x_4_V_read;
input  [26:0] x_5_V_read;
input  [26:0] x_6_V_read;
input  [26:0] x_7_V_read;
output  [26:0] ap_return;

wire   [0:0] icmp_ln1496_fu_66_p2;
wire   [0:0] icmp_ln1496_1_fu_80_p2;
wire   [26:0] select_ln86_fu_72_p3;
wire   [26:0] select_ln86_1_fu_86_p3;
wire   [0:0] icmp_ln1496_2_fu_94_p2;
wire   [0:0] icmp_ln1496_3_fu_108_p2;
wire   [0:0] icmp_ln1496_4_fu_122_p2;
wire   [26:0] select_ln86_3_fu_114_p3;
wire   [26:0] select_ln86_4_fu_128_p3;
wire   [0:0] icmp_ln1496_5_fu_136_p2;
wire   [26:0] select_ln86_2_fu_100_p3;
wire   [26:0] select_ln86_5_fu_142_p3;
wire   [0:0] icmp_ln1496_6_fu_150_p2;

assign ap_ready = 1'b1;

assign ap_return = ((icmp_ln1496_6_fu_150_p2[0:0] === 1'b1) ? select_ln86_5_fu_142_p3 : select_ln86_2_fu_100_p3);

assign icmp_ln1496_1_fu_80_p2 = (($signed(x_2_V_read) < $signed(x_3_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_94_p2 = (($signed(select_ln86_fu_72_p3) < $signed(select_ln86_1_fu_86_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_108_p2 = (($signed(x_4_V_read) < $signed(x_5_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_122_p2 = (($signed(x_6_V_read) < $signed(x_7_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_136_p2 = (($signed(select_ln86_3_fu_114_p3) < $signed(select_ln86_4_fu_128_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_150_p2 = (($signed(select_ln86_2_fu_100_p3) < $signed(select_ln86_5_fu_142_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_66_p2 = (($signed(x_0_V_read) < $signed(x_1_V_read)) ? 1'b1 : 1'b0);

assign select_ln86_1_fu_86_p3 = ((icmp_ln1496_1_fu_80_p2[0:0] === 1'b1) ? x_3_V_read : x_2_V_read);

assign select_ln86_2_fu_100_p3 = ((icmp_ln1496_2_fu_94_p2[0:0] === 1'b1) ? select_ln86_1_fu_86_p3 : select_ln86_fu_72_p3);

assign select_ln86_3_fu_114_p3 = ((icmp_ln1496_3_fu_108_p2[0:0] === 1'b1) ? x_5_V_read : x_4_V_read);

assign select_ln86_4_fu_128_p3 = ((icmp_ln1496_4_fu_122_p2[0:0] === 1'b1) ? x_7_V_read : x_6_V_read);

assign select_ln86_5_fu_142_p3 = ((icmp_ln1496_5_fu_136_p2[0:0] === 1'b1) ? select_ln86_4_fu_128_p3 : select_ln86_3_fu_114_p3);

assign select_ln86_fu_72_p3 = ((icmp_ln1496_fu_66_p2[0:0] === 1'b1) ? x_1_V_read : x_0_V_read);

endmodule //reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
