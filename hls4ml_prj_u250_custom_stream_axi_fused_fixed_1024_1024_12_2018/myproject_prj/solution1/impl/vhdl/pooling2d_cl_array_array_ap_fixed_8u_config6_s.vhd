-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pooling2d_cl_array_array_ap_fixed_8u_config6_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (26 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (26 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of pooling2d_cl_array_array_ap_fixed_8u_config6_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_800 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_3_8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_19 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_20 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_21 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_22 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_23 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_24 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_25 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_26 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_27 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_28 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_29 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_30 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_31 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_40 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_41 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_42 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_43 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_44 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_45 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_46 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_47 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_48 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_49 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_50 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_51 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_52 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_53 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_54 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_55 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_56 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_57 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_58 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_59 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_60 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_61 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_62 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal kernel_data_V_3_63 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln233_reg_1492 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal and_ln185_2_reg_1541 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_254 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln233_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op28 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal io_acc_block_signal_op244 : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln233_reg_1492_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln233_fu_454_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_0_V_reg_1501 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_1_V_reg_1506 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_2_V_reg_1511 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_3_V_reg_1516 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_4_V_reg_1521 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_5_V_reg_1526 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_6_V_reg_1531 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_7_V_reg_1536 : STD_LOGIC_VECTOR (26 downto 0);
    signal and_ln185_2_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_0_V_1_reg_1545 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_1_V_1_reg_1550 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_2_V_1_reg_1555 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_3_V_1_reg_1560 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_4_V_1_reg_1565 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_5_V_1_reg_1570 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_6_V_1_reg_1575 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_data_7_V_1_reg_1580 : STD_LOGIC_VECTOR (26 downto 0);
    signal icmp_ln203_fu_1398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln203_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln207_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln213_fu_1472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_ready : STD_LOGIC;
    signal tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_ready : STD_LOGIC;
    signal tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_ready : STD_LOGIC;
    signal tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_ready : STD_LOGIC;
    signal tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_ready : STD_LOGIC;
    signal tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_ready : STD_LOGIC;
    signal tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_ready : STD_LOGIC;
    signal tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_done : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_idle : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready : STD_LOGIC;
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63 : STD_LOGIC_VECTOR (26 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0_ignore_call62 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1_ignore_call62 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2_ignore_call62 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3_ignore_call62 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp90 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg : STD_LOGIC := '0';
    signal add_ln216_fu_1404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln218_fu_1422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln211_fu_1454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln185_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_1_fu_1354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_2_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln185_3_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln185_1_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln185_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln218_fu_1416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln213_fu_1466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_277 : BOOLEAN;
    signal ap_condition_526 : BOOLEAN;
    signal ap_condition_5168 : BOOLEAN;

    component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s IS
    port (
        ap_ready : OUT STD_LOGIC;
        x_0_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_1_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_2_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_3_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_4_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_5_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_6_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        x_7_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component shift_line_buffer_array_ap_fixed_8u_config6_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_elem_data_0_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_1_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_2_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_3_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_4_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_5_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_6_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        in_elem_data_7_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_8_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_9_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_10_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_11_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_12_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_13_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_14_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_15_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_16_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_17_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_18_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_19_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_20_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_21_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_22_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_23_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_24_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_25_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_26_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_27_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_28_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_29_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_30_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_31_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_40_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_41_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_42_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_43_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_44_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_45_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_46_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_47_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_48_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_49_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_50_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_51_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_52_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_53_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_54_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_55_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_56_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_57_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_58_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_59_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_60_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_61_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_62_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        kernel_window_63_V_read : IN STD_LOGIC_VECTOR (26 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_33 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_34 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_35 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_36 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_37 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_38 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_39 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_40 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_41 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_42 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_43 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_44 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_45 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_46 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_47 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_48 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_49 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_50 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_51 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_52 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_53 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_54 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_55 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_56 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_57 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_58 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_59 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_60 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_61 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_62 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_return_63 : OUT STD_LOGIC_VECTOR (26 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56,
        ap_return => tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return);

    tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57,
        ap_return => tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return);

    tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58,
        ap_return => tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return);

    tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59,
        ap_return => tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return);

    tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60,
        ap_return => tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return);

    tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61,
        ap_return => tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return);

    tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62,
        ap_return => tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return);

    tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360 : component reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s
    port map (
        ap_ready => tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_ready,
        x_0_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7,
        x_1_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23,
        x_2_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31,
        x_3_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39,
        x_4_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15,
        x_5_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47,
        x_6_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55,
        x_7_V_read => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63,
        ap_return => tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return);

    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372 : component shift_line_buffer_array_ap_fixed_8u_config6_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start,
        ap_done => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_done,
        ap_idle => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_idle,
        ap_ready => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready,
        in_elem_data_0_V_read => tmp_data_0_V_reg_1501,
        in_elem_data_1_V_read => tmp_data_1_V_reg_1506,
        in_elem_data_2_V_read => tmp_data_2_V_reg_1511,
        in_elem_data_3_V_read => tmp_data_3_V_reg_1516,
        in_elem_data_4_V_read => tmp_data_4_V_reg_1521,
        in_elem_data_5_V_read => tmp_data_5_V_reg_1526,
        in_elem_data_6_V_read => tmp_data_6_V_reg_1531,
        in_elem_data_7_V_read => tmp_data_7_V_reg_1536,
        kernel_window_8_V_read => kernel_data_V_3_8,
        kernel_window_9_V_read => kernel_data_V_3_9,
        kernel_window_10_V_read => kernel_data_V_3_10,
        kernel_window_11_V_read => kernel_data_V_3_11,
        kernel_window_12_V_read => kernel_data_V_3_12,
        kernel_window_13_V_read => kernel_data_V_3_13,
        kernel_window_14_V_read => kernel_data_V_3_14,
        kernel_window_15_V_read => kernel_data_V_3_15,
        kernel_window_16_V_read => kernel_data_V_3_16,
        kernel_window_17_V_read => kernel_data_V_3_17,
        kernel_window_18_V_read => kernel_data_V_3_18,
        kernel_window_19_V_read => kernel_data_V_3_19,
        kernel_window_20_V_read => kernel_data_V_3_20,
        kernel_window_21_V_read => kernel_data_V_3_21,
        kernel_window_22_V_read => kernel_data_V_3_22,
        kernel_window_23_V_read => kernel_data_V_3_23,
        kernel_window_24_V_read => kernel_data_V_3_24,
        kernel_window_25_V_read => kernel_data_V_3_25,
        kernel_window_26_V_read => kernel_data_V_3_26,
        kernel_window_27_V_read => kernel_data_V_3_27,
        kernel_window_28_V_read => kernel_data_V_3_28,
        kernel_window_29_V_read => kernel_data_V_3_29,
        kernel_window_30_V_read => kernel_data_V_3_30,
        kernel_window_31_V_read => kernel_data_V_3_31,
        kernel_window_40_V_read => kernel_data_V_3_40,
        kernel_window_41_V_read => kernel_data_V_3_41,
        kernel_window_42_V_read => kernel_data_V_3_42,
        kernel_window_43_V_read => kernel_data_V_3_43,
        kernel_window_44_V_read => kernel_data_V_3_44,
        kernel_window_45_V_read => kernel_data_V_3_45,
        kernel_window_46_V_read => kernel_data_V_3_46,
        kernel_window_47_V_read => kernel_data_V_3_47,
        kernel_window_48_V_read => kernel_data_V_3_48,
        kernel_window_49_V_read => kernel_data_V_3_49,
        kernel_window_50_V_read => kernel_data_V_3_50,
        kernel_window_51_V_read => kernel_data_V_3_51,
        kernel_window_52_V_read => kernel_data_V_3_52,
        kernel_window_53_V_read => kernel_data_V_3_53,
        kernel_window_54_V_read => kernel_data_V_3_54,
        kernel_window_55_V_read => kernel_data_V_3_55,
        kernel_window_56_V_read => kernel_data_V_3_56,
        kernel_window_57_V_read => kernel_data_V_3_57,
        kernel_window_58_V_read => kernel_data_V_3_58,
        kernel_window_59_V_read => kernel_data_V_3_59,
        kernel_window_60_V_read => kernel_data_V_3_60,
        kernel_window_61_V_read => kernel_data_V_3_61,
        kernel_window_62_V_read => kernel_data_V_3_62,
        kernel_window_63_V_read => kernel_data_V_3_63,
        ap_return_0 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0,
        ap_return_1 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1,
        ap_return_2 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2,
        ap_return_3 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3,
        ap_return_4 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4,
        ap_return_5 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5,
        ap_return_6 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6,
        ap_return_7 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7,
        ap_return_8 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8,
        ap_return_9 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9,
        ap_return_10 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10,
        ap_return_11 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11,
        ap_return_12 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12,
        ap_return_13 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13,
        ap_return_14 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14,
        ap_return_15 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15,
        ap_return_16 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16,
        ap_return_17 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17,
        ap_return_18 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18,
        ap_return_19 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19,
        ap_return_20 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20,
        ap_return_21 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21,
        ap_return_22 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22,
        ap_return_23 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23,
        ap_return_24 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24,
        ap_return_25 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25,
        ap_return_26 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26,
        ap_return_27 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27,
        ap_return_28 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28,
        ap_return_29 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29,
        ap_return_30 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30,
        ap_return_31 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31,
        ap_return_32 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32,
        ap_return_33 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33,
        ap_return_34 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34,
        ap_return_35 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35,
        ap_return_36 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36,
        ap_return_37 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37,
        ap_return_38 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38,
        ap_return_39 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39,
        ap_return_40 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40,
        ap_return_41 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41,
        ap_return_42 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42,
        ap_return_43 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43,
        ap_return_44 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44,
        ap_return_45 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45,
        ap_return_46 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46,
        ap_return_47 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47,
        ap_return_48 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48,
        ap_return_49 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49,
        ap_return_50 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50,
        ap_return_51 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51,
        ap_return_52 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52,
        ap_return_53 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53,
        ap_return_54 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54,
        ap_return_55 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55,
        ap_return_56 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56,
        ap_return_57 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57,
        ap_return_58 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58,
        ap_return_59 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59,
        ap_return_60 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60,
        ap_return_61 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61,
        ap_return_62 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62,
        ap_return_63 => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63,
        ap_ce => call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
                    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= ap_const_logic_1;
                elsif ((call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready = ap_const_logic_1)) then 
                    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_526)) then 
                    ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_277)) then 
                    ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= select_ln213_fu_1472_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_fu_448_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_254 <= add_ln233_fu_454_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_254 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    pX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((icmp_ln203_fu_1398_p2 = ap_const_lv1_1)) then 
                    pX <= ap_const_lv32_0;
                elsif ((icmp_ln203_fu_1398_p2 = ap_const_lv1_0)) then 
                    pX <= add_ln216_fu_1404_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_5168)) then
                if ((icmp_ln207_fu_1448_p2 = ap_const_lv1_1)) then 
                    pY <= ap_const_lv32_0;
                elsif ((icmp_ln207_fu_1448_p2 = ap_const_lv1_0)) then 
                    pY <= add_ln211_fu_1454_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((icmp_ln203_fu_1398_p2 = ap_const_lv1_1)) then 
                    sX <= ap_const_lv32_0;
                elsif ((icmp_ln203_fu_1398_p2 = ap_const_lv1_0)) then 
                    sX <= select_ln218_fu_1422_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln233_reg_1492_pp0_iter1_reg = ap_const_lv1_0))) then
                and_ln185_2_reg_1541 <= and_ln185_2_fu_1392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln203_reg_1585 <= icmp_ln203_fu_1398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln233_reg_1492 <= icmp_ln233_fu_448_p2;
                icmp_ln233_reg_1492_pp0_iter1_reg <= icmp_ln233_reg_1492;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln233_reg_1492_pp0_iter1_reg = ap_const_lv1_0))) then
                kernel_data_V_3_10 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18;
                kernel_data_V_3_11 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19;
                kernel_data_V_3_12 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20;
                kernel_data_V_3_13 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21;
                kernel_data_V_3_14 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22;
                kernel_data_V_3_15 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23;
                kernel_data_V_3_16 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24;
                kernel_data_V_3_17 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25;
                kernel_data_V_3_18 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26;
                kernel_data_V_3_19 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27;
                kernel_data_V_3_20 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28;
                kernel_data_V_3_21 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29;
                kernel_data_V_3_22 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30;
                kernel_data_V_3_23 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31;
                kernel_data_V_3_24 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32;
                kernel_data_V_3_25 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33;
                kernel_data_V_3_26 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34;
                kernel_data_V_3_27 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35;
                kernel_data_V_3_28 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36;
                kernel_data_V_3_29 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37;
                kernel_data_V_3_30 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38;
                kernel_data_V_3_31 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39;
                kernel_data_V_3_40 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40;
                kernel_data_V_3_41 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41;
                kernel_data_V_3_42 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42;
                kernel_data_V_3_43 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43;
                kernel_data_V_3_44 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44;
                kernel_data_V_3_45 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45;
                kernel_data_V_3_46 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46;
                kernel_data_V_3_47 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47;
                kernel_data_V_3_48 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48;
                kernel_data_V_3_49 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49;
                kernel_data_V_3_50 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50;
                kernel_data_V_3_51 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51;
                kernel_data_V_3_52 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52;
                kernel_data_V_3_53 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53;
                kernel_data_V_3_54 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54;
                kernel_data_V_3_55 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55;
                kernel_data_V_3_56 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56;
                kernel_data_V_3_57 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57;
                kernel_data_V_3_58 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58;
                kernel_data_V_3_59 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59;
                kernel_data_V_3_60 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60;
                kernel_data_V_3_61 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61;
                kernel_data_V_3_62 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62;
                kernel_data_V_3_63 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63;
                kernel_data_V_3_8 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16;
                kernel_data_V_3_9 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln203_reg_1585 = ap_const_lv1_1))) then
                sY <= ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln185_2_fu_1392_p2))) then
                tmp_data_0_V_1_reg_1545 <= tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return;
                tmp_data_1_V_1_reg_1550 <= tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return;
                tmp_data_2_V_1_reg_1555 <= tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return;
                tmp_data_3_V_1_reg_1560 <= tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return;
                tmp_data_4_V_1_reg_1565 <= tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return;
                tmp_data_5_V_1_reg_1570 <= tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return;
                tmp_data_6_V_1_reg_1575 <= tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return;
                tmp_data_7_V_1_reg_1580 <= tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1501 <= data_V_data_0_V_dout;
                tmp_data_1_V_reg_1506 <= data_V_data_1_V_dout;
                tmp_data_2_V_reg_1511 <= data_V_data_2_V_dout;
                tmp_data_3_V_reg_1516 <= data_V_data_3_V_dout;
                tmp_data_4_V_reg_1521 <= data_V_data_4_V_dout;
                tmp_data_5_V_reg_1526 <= data_V_data_5_V_dout;
                tmp_data_6_V_reg_1531 <= data_V_data_6_V_dout;
                tmp_data_7_V_reg_1536 <= data_V_data_7_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, icmp_ln233_fu_448_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_fu_448_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln233_fu_448_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln211_fu_1454_p2 <= std_logic_vector(unsigned(pY) + unsigned(ap_const_lv32_1));
    add_ln213_fu_1466_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_load) + unsigned(ap_const_lv32_1));
    add_ln216_fu_1404_p2 <= std_logic_vector(unsigned(pX) + unsigned(ap_const_lv32_1));
    add_ln218_fu_1416_p2 <= std_logic_vector(unsigned(sX) + unsigned(ap_const_lv32_1));
    add_ln233_fu_454_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_254) + unsigned(ap_const_lv12_1));
    and_ln185_1_fu_1386_p2 <= (icmp_ln185_3_fu_1374_p2 and icmp_ln185_2_fu_1364_p2);
    and_ln185_2_fu_1392_p2 <= (and_ln185_fu_1380_p2 and and_ln185_1_fu_1386_p2);
    and_ln185_fu_1380_p2 <= (icmp_ln185_fu_1344_p2 and icmp_ln185_1_fu_1354_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, io_acc_block_signal_op28, io_acc_block_signal_op244)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln233_reg_1492 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, io_acc_block_signal_op28, io_acc_block_signal_op244)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln233_reg_1492 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp90_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, io_acc_block_signal_op28, io_acc_block_signal_op244)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp90 <= (((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln233_reg_1492 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, io_acc_block_signal_op28, io_acc_block_signal_op244)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541)) or ((io_acc_block_signal_op28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln233_reg_1492 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln233_reg_1492, io_acc_block_signal_op28)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((io_acc_block_signal_op28 = ap_const_logic_0) and (icmp_ln233_reg_1492 = ap_const_lv1_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_ignore_call62_assign_proc : process(icmp_ln233_reg_1492, io_acc_block_signal_op28)
    begin
                ap_block_state3_pp0_stage0_iter1_ignore_call62 <= ((io_acc_block_signal_op28 = ap_const_logic_0) and (icmp_ln233_reg_1492 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2_ignore_call62 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(and_ln185_2_reg_1541, io_acc_block_signal_op244)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln185_2_reg_1541));
    end process;


    ap_block_state5_pp0_stage0_iter3_ignore_call62_assign_proc : process(and_ln185_2_reg_1541, io_acc_block_signal_op244)
    begin
                ap_block_state5_pp0_stage0_iter3_ignore_call62 <= ((io_acc_block_signal_op244 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln185_2_reg_1541));
    end process;


    ap_condition_277_assign_proc : process(icmp_ln233_reg_1492_pp0_iter1_reg, icmp_ln203_fu_1398_p2, icmp_ln207_fu_1448_p2)
    begin
                ap_condition_277 <= ((icmp_ln203_fu_1398_p2 = ap_const_lv1_1) and (icmp_ln207_fu_1448_p2 = ap_const_lv1_0) and (icmp_ln233_reg_1492_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_5168_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln233_reg_1492_pp0_iter1_reg, icmp_ln203_fu_1398_p2, ap_enable_reg_pp0_iter2)
    begin
                ap_condition_5168 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln203_fu_1398_p2 = ap_const_lv1_1) and (icmp_ln233_reg_1492_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_526_assign_proc : process(icmp_ln233_reg_1492_pp0_iter1_reg, icmp_ln203_fu_1398_p2, icmp_ln207_fu_1448_p2)
    begin
                ap_condition_526 <= ((icmp_ln207_fu_1448_p2 = ap_const_lv1_1) and (icmp_ln203_fu_1398_p2 = ap_const_lv1_1) and (icmp_ln233_reg_1492_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln233_fu_448_p2)
    begin
        if ((icmp_ln233_fu_448_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_sY_load_assign_proc : process(sY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln203_reg_1585, ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln203_reg_1585 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_sY_load <= ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265;
        else 
            ap_sig_allocacmp_sY_load <= sY;
        end if; 
    end process;


    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp90)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp90) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce <= ap_const_logic_1;
        else 
            call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln233_reg_1492)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln233_reg_1492, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln233_reg_1492 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln185_1_fu_1354_p2 <= "1" when (ap_sig_allocacmp_sY_load = ap_const_lv32_1) else "0";
    icmp_ln185_2_fu_1364_p2 <= "1" when (signed(pY) > signed(ap_const_lv32_0)) else "0";
    icmp_ln185_3_fu_1374_p2 <= "1" when (signed(pX) > signed(ap_const_lv32_2)) else "0";
    icmp_ln185_fu_1344_p2 <= "1" when (sX = ap_const_lv32_3) else "0";
    icmp_ln203_fu_1398_p2 <= "1" when (pX = ap_const_lv32_3F) else "0";
    icmp_ln207_fu_1448_p2 <= "1" when (pY = ap_const_lv32_1F) else "0";
    icmp_ln233_fu_448_p2 <= "1" when (indvar_flatten_reg_254 = ap_const_lv12_800) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op244 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op28 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_1_reg_1545;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_1_reg_1550;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_1_reg_1555;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_1_reg_1560;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_1_reg_1565;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_1_reg_1570;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_1_reg_1575;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_1_reg_1580;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, and_ln185_2_reg_1541, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln185_2_reg_1541))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln213_fu_1472_p3 <= 
        ap_const_lv32_0 when (icmp_ln185_1_fu_1354_p2(0) = '1') else 
        add_ln213_fu_1466_p2;
    select_ln218_fu_1422_p3 <= 
        ap_const_lv32_0 when (icmp_ln185_fu_1344_p2(0) = '1') else 
        add_ln218_fu_1416_p2;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
