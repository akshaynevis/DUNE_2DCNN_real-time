// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_array_array_ap_fixed_27_9_5_3_0_12u_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_stream_V_data_0_V_dout,
        data_stream_V_data_0_V_empty_n,
        data_stream_V_data_0_V_read,
        data_stream_V_data_1_V_dout,
        data_stream_V_data_1_V_empty_n,
        data_stream_V_data_1_V_read,
        data_stream_V_data_2_V_dout,
        data_stream_V_data_2_V_empty_n,
        data_stream_V_data_2_V_read,
        data_stream_V_data_3_V_dout,
        data_stream_V_data_3_V_empty_n,
        data_stream_V_data_3_V_read,
        data_stream_V_data_4_V_dout,
        data_stream_V_data_4_V_empty_n,
        data_stream_V_data_4_V_read,
        data_stream_V_data_5_V_dout,
        data_stream_V_data_5_V_empty_n,
        data_stream_V_data_5_V_read,
        data_stream_V_data_6_V_dout,
        data_stream_V_data_6_V_empty_n,
        data_stream_V_data_6_V_read,
        data_stream_V_data_7_V_dout,
        data_stream_V_data_7_V_empty_n,
        data_stream_V_data_7_V_read,
        data_stream_V_data_8_V_dout,
        data_stream_V_data_8_V_empty_n,
        data_stream_V_data_8_V_read,
        data_stream_V_data_9_V_dout,
        data_stream_V_data_9_V_empty_n,
        data_stream_V_data_9_V_read,
        data_stream_V_data_10_V_dout,
        data_stream_V_data_10_V_empty_n,
        data_stream_V_data_10_V_read,
        data_stream_V_data_11_V_dout,
        data_stream_V_data_11_V_empty_n,
        data_stream_V_data_11_V_read,
        data_stream_V_data_12_V_dout,
        data_stream_V_data_12_V_empty_n,
        data_stream_V_data_12_V_read,
        data_stream_V_data_13_V_dout,
        data_stream_V_data_13_V_empty_n,
        data_stream_V_data_13_V_read,
        data_stream_V_data_14_V_dout,
        data_stream_V_data_14_V_empty_n,
        data_stream_V_data_14_V_read,
        data_stream_V_data_15_V_dout,
        data_stream_V_data_15_V_empty_n,
        data_stream_V_data_15_V_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write,
        res_stream_V_data_6_V_din,
        res_stream_V_data_6_V_full_n,
        res_stream_V_data_6_V_write,
        res_stream_V_data_7_V_din,
        res_stream_V_data_7_V_full_n,
        res_stream_V_data_7_V_write,
        res_stream_V_data_8_V_din,
        res_stream_V_data_8_V_full_n,
        res_stream_V_data_8_V_write,
        res_stream_V_data_9_V_din,
        res_stream_V_data_9_V_full_n,
        res_stream_V_data_9_V_write,
        res_stream_V_data_10_V_din,
        res_stream_V_data_10_V_full_n,
        res_stream_V_data_10_V_write,
        res_stream_V_data_11_V_din,
        res_stream_V_data_11_V_full_n,
        res_stream_V_data_11_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_state4 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [26:0] data_stream_V_data_0_V_dout;
input   data_stream_V_data_0_V_empty_n;
output   data_stream_V_data_0_V_read;
input  [26:0] data_stream_V_data_1_V_dout;
input   data_stream_V_data_1_V_empty_n;
output   data_stream_V_data_1_V_read;
input  [26:0] data_stream_V_data_2_V_dout;
input   data_stream_V_data_2_V_empty_n;
output   data_stream_V_data_2_V_read;
input  [26:0] data_stream_V_data_3_V_dout;
input   data_stream_V_data_3_V_empty_n;
output   data_stream_V_data_3_V_read;
input  [26:0] data_stream_V_data_4_V_dout;
input   data_stream_V_data_4_V_empty_n;
output   data_stream_V_data_4_V_read;
input  [26:0] data_stream_V_data_5_V_dout;
input   data_stream_V_data_5_V_empty_n;
output   data_stream_V_data_5_V_read;
input  [26:0] data_stream_V_data_6_V_dout;
input   data_stream_V_data_6_V_empty_n;
output   data_stream_V_data_6_V_read;
input  [26:0] data_stream_V_data_7_V_dout;
input   data_stream_V_data_7_V_empty_n;
output   data_stream_V_data_7_V_read;
input  [26:0] data_stream_V_data_8_V_dout;
input   data_stream_V_data_8_V_empty_n;
output   data_stream_V_data_8_V_read;
input  [26:0] data_stream_V_data_9_V_dout;
input   data_stream_V_data_9_V_empty_n;
output   data_stream_V_data_9_V_read;
input  [26:0] data_stream_V_data_10_V_dout;
input   data_stream_V_data_10_V_empty_n;
output   data_stream_V_data_10_V_read;
input  [26:0] data_stream_V_data_11_V_dout;
input   data_stream_V_data_11_V_empty_n;
output   data_stream_V_data_11_V_read;
input  [26:0] data_stream_V_data_12_V_dout;
input   data_stream_V_data_12_V_empty_n;
output   data_stream_V_data_12_V_read;
input  [26:0] data_stream_V_data_13_V_dout;
input   data_stream_V_data_13_V_empty_n;
output   data_stream_V_data_13_V_read;
input  [26:0] data_stream_V_data_14_V_dout;
input   data_stream_V_data_14_V_empty_n;
output   data_stream_V_data_14_V_read;
input  [26:0] data_stream_V_data_15_V_dout;
input   data_stream_V_data_15_V_empty_n;
output   data_stream_V_data_15_V_read;
output  [26:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [26:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [26:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [26:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [26:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [26:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;
output  [26:0] res_stream_V_data_6_V_din;
input   res_stream_V_data_6_V_full_n;
output   res_stream_V_data_6_V_write;
output  [26:0] res_stream_V_data_7_V_din;
input   res_stream_V_data_7_V_full_n;
output   res_stream_V_data_7_V_write;
output  [26:0] res_stream_V_data_8_V_din;
input   res_stream_V_data_8_V_full_n;
output   res_stream_V_data_8_V_write;
output  [26:0] res_stream_V_data_9_V_din;
input   res_stream_V_data_9_V_full_n;
output   res_stream_V_data_9_V_write;
output  [26:0] res_stream_V_data_10_V_din;
input   res_stream_V_data_10_V_full_n;
output   res_stream_V_data_10_V_write;
output  [26:0] res_stream_V_data_11_V_din;
input   res_stream_V_data_11_V_full_n;
output   res_stream_V_data_11_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_stream_V_data_0_V_read;
reg data_stream_V_data_1_V_read;
reg data_stream_V_data_2_V_read;
reg data_stream_V_data_3_V_read;
reg data_stream_V_data_4_V_read;
reg data_stream_V_data_5_V_read;
reg data_stream_V_data_6_V_read;
reg data_stream_V_data_7_V_read;
reg data_stream_V_data_8_V_read;
reg data_stream_V_data_9_V_read;
reg data_stream_V_data_10_V_read;
reg data_stream_V_data_11_V_read;
reg data_stream_V_data_12_V_read;
reg data_stream_V_data_13_V_read;
reg data_stream_V_data_14_V_read;
reg data_stream_V_data_15_V_read;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;
reg res_stream_V_data_6_V_write;
reg res_stream_V_data_7_V_write;
reg res_stream_V_data_8_V_write;
reg res_stream_V_data_9_V_write;
reg res_stream_V_data_10_V_write;
reg res_stream_V_data_11_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg    data_stream_V_data_1_V_blk_n;
reg    data_stream_V_data_2_V_blk_n;
reg    data_stream_V_data_3_V_blk_n;
reg    data_stream_V_data_4_V_blk_n;
reg    data_stream_V_data_5_V_blk_n;
reg    data_stream_V_data_6_V_blk_n;
reg    data_stream_V_data_7_V_blk_n;
reg    data_stream_V_data_8_V_blk_n;
reg    data_stream_V_data_9_V_blk_n;
reg    data_stream_V_data_10_V_blk_n;
reg    data_stream_V_data_11_V_blk_n;
reg    data_stream_V_data_12_V_blk_n;
reg    data_stream_V_data_13_V_blk_n;
reg    data_stream_V_data_14_V_blk_n;
reg    data_stream_V_data_15_V_blk_n;
reg    res_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_state5;
reg    res_stream_V_data_1_V_blk_n;
reg    res_stream_V_data_2_V_blk_n;
reg    res_stream_V_data_3_V_blk_n;
reg    res_stream_V_data_4_V_blk_n;
reg    res_stream_V_data_5_V_blk_n;
reg    res_stream_V_data_6_V_blk_n;
reg    res_stream_V_data_7_V_blk_n;
reg    res_stream_V_data_8_V_blk_n;
reg    res_stream_V_data_9_V_blk_n;
reg    res_stream_V_data_10_V_blk_n;
reg    res_stream_V_data_11_V_blk_n;
reg   [4:0] i_in_0_reg_465;
wire   [0:0] icmp_ln41_fu_542_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op170;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] i_in_fu_548_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] trunc_ln203_fu_554_p1;
reg   [3:0] trunc_ln203_reg_1552;
wire    ap_CS_fsm_state4;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start;
wire    grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done;
wire    grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_idle;
wire    grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_ready;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_0;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_1;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_2;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_3;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_4;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_5;
wire   [26:0] grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_6;
reg    grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg;
reg   [26:0] data_243_V_fu_136;
reg   [26:0] data_250_V_fu_140;
reg   [26:0] data_243_V_1_fu_144;
reg   [26:0] data_249_V_fu_148;
reg   [26:0] data_247_V_fu_152;
reg   [26:0] data_243_V_2_fu_156;
reg   [26:0] data_247_V_1_fu_160;
reg   [26:0] data_250_V_1_fu_164;
reg   [26:0] data_249_V_1_fu_168;
reg   [26:0] data_250_V_2_fu_172;
reg   [26:0] data_249_V_2_fu_176;
reg   [26:0] data_247_V_2_fu_180;
reg   [26:0] data_243_V_3_fu_184;
reg   [26:0] data_250_V_3_fu_188;
reg   [26:0] data_249_V_3_fu_192;
reg   [26:0] data_247_V_3_fu_196;
reg   [26:0] data_243_V_4_fu_200;
reg   [26:0] data_250_V_4_fu_204;
reg   [26:0] data_249_V_4_fu_208;
reg   [26:0] data_247_V_4_fu_212;
reg   [26:0] data_250_V_5_fu_216;
reg   [26:0] data_247_V_5_fu_220;
reg   [26:0] data_249_V_5_fu_224;
reg   [26:0] data_247_V_6_fu_228;
reg   [26:0] data_243_V_5_fu_232;
reg   [26:0] data_247_V_7_fu_236;
reg   [26:0] data_249_V_6_fu_240;
reg   [26:0] data_250_V_6_fu_244;
reg   [26:0] data_249_V_7_fu_248;
reg   [26:0] data_247_V_8_fu_252;
reg   [26:0] data_250_V_7_fu_256;
reg   [26:0] data_249_V_8_fu_260;
reg   [26:0] data_247_V_9_fu_264;
reg   [26:0] data_243_V_6_fu_268;
reg   [26:0] data_243_V_7_fu_272;
reg   [26:0] data_250_V_8_fu_276;
reg   [26:0] data_249_V_9_fu_280;
reg   [26:0] data_247_V_10_fu_284;
reg   [26:0] data_247_V_11_fu_288;
reg   [26:0] data_243_V_8_fu_292;
reg   [26:0] data_249_V_10_fu_296;
reg   [26:0] data_250_V_9_fu_300;
reg   [26:0] data_249_V_11_fu_304;
reg   [26:0] data_247_V_12_fu_308;
reg   [26:0] data_243_V_9_fu_312;
reg   [26:0] data_243_V_10_fu_316;
reg   [26:0] data_247_V_13_fu_320;
reg   [26:0] data_249_V_12_fu_324;
reg   [26:0] data_247_V_14_fu_328;
reg   [26:0] data_243_V_11_fu_332;
reg   [26:0] data_247_V_15_fu_336;
reg   [26:0] data_243_V_12_fu_340;
reg   [26:0] data_240_V_fu_344;
reg   [26:0] data_240_V_1_fu_348;
reg   [26:0] data_240_V_2_fu_352;
reg   [26:0] data_240_V_3_fu_356;
reg   [26:0] data_240_V_4_fu_360;
reg   [26:0] data_240_V_5_fu_364;
reg   [26:0] data_240_V_6_fu_368;
reg   [26:0] data_240_V_7_fu_372;
reg   [26:0] data_240_V_8_fu_376;
reg   [26:0] data_240_V_9_fu_380;
wire    io_acc_block_signal_op315;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg = 1'b0;
end

dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start),
    .ap_done(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done),
    .ap_idle(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_idle),
    .ap_ready(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_ready),
    .data_3_V_read(data_243_V_1_fu_144),
    .data_7_V_read(data_247_V_1_fu_160),
    .data_9_V_read(data_249_V_1_fu_168),
    .data_10_V_read(data_250_V_2_fu_172),
    .data_23_V_read(data_247_V_5_fu_220),
    .data_25_V_read(data_249_V_5_fu_224),
    .data_26_V_read(data_250_V_5_fu_216),
    .data_39_V_read(data_247_V_4_fu_212),
    .data_41_V_read(data_249_V_4_fu_208),
    .data_42_V_read(data_250_V_4_fu_204),
    .data_51_V_read(data_243_V_4_fu_200),
    .data_55_V_read(data_247_V_3_fu_196),
    .data_57_V_read(data_249_V_3_fu_192),
    .data_58_V_read(data_250_V_3_fu_188),
    .data_64_V_read(data_240_V_1_fu_348),
    .data_67_V_read(data_243_V_3_fu_184),
    .data_71_V_read(data_247_V_2_fu_180),
    .data_73_V_read(data_249_V_2_fu_176),
    .data_74_V_read(data_250_V_1_fu_164),
    .data_83_V_read(data_243_V_2_fu_156),
    .data_87_V_read(data_247_V_fu_152),
    .data_89_V_read(data_249_V_fu_148),
    .data_90_V_read(data_250_V_fu_140),
    .data_96_V_read(data_240_V_fu_344),
    .data_99_V_read(data_243_V_fu_136),
    .data_103_V_read(data_247_V_7_fu_236),
    .data_105_V_read(data_249_V_6_fu_240),
    .data_112_V_read(data_240_V_3_fu_356),
    .data_115_V_read(data_243_V_7_fu_272),
    .data_119_V_read(data_247_V_11_fu_288),
    .data_121_V_read(data_249_V_10_fu_296),
    .data_128_V_read(data_240_V_6_fu_368),
    .data_131_V_read(data_243_V_9_fu_312),
    .data_135_V_read(data_247_V_12_fu_308),
    .data_137_V_read(data_249_V_11_fu_304),
    .data_138_V_read(data_250_V_9_fu_300),
    .data_144_V_read(data_240_V_5_fu_364),
    .data_147_V_read(data_243_V_8_fu_292),
    .data_151_V_read(data_247_V_10_fu_284),
    .data_153_V_read(data_249_V_9_fu_280),
    .data_154_V_read(data_250_V_8_fu_276),
    .data_160_V_read(data_240_V_4_fu_360),
    .data_163_V_read(data_243_V_6_fu_268),
    .data_167_V_read(data_247_V_9_fu_264),
    .data_169_V_read(data_249_V_8_fu_260),
    .data_170_V_read(data_250_V_7_fu_256),
    .data_183_V_read(data_247_V_8_fu_252),
    .data_185_V_read(data_249_V_7_fu_248),
    .data_186_V_read(data_250_V_6_fu_244),
    .data_192_V_read(data_240_V_2_fu_352),
    .data_195_V_read(data_243_V_5_fu_232),
    .data_199_V_read(data_247_V_6_fu_228),
    .data_208_V_read(data_240_V_7_fu_372),
    .data_211_V_read(data_243_V_10_fu_316),
    .data_215_V_read(data_247_V_13_fu_320),
    .data_224_V_read(data_240_V_9_fu_380),
    .data_227_V_read(data_243_V_12_fu_340),
    .data_231_V_read(data_247_V_15_fu_336),
    .data_240_V_read(data_240_V_8_fu_376),
    .data_243_V_read(data_243_V_11_fu_332),
    .data_247_V_read(data_247_V_14_fu_328),
    .data_249_V_read(data_249_V_12_fu_324),
    .ap_return_0(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_0),
    .ap_return_1(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_1),
    .ap_return_2(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_2),
    .ap_return_3(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_3),
    .ap_return_4(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_4),
    .ap_return_5(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_5),
    .ap_return_6(grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg <= 1'b1;
        end else if ((grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_ready == 1'b1)) begin
            grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_fu_542_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_in_0_reg_465 <= i_in_fu_548_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_in_0_reg_465 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_1_fu_348 <= data_stream_V_data_0_V_dout;
        data_243_V_3_fu_184 <= data_stream_V_data_3_V_dout;
        data_247_V_2_fu_180 <= data_stream_V_data_7_V_dout;
        data_249_V_2_fu_176 <= data_stream_V_data_9_V_dout;
        data_250_V_1_fu_164 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_2_fu_352 <= data_stream_V_data_0_V_dout;
        data_243_V_5_fu_232 <= data_stream_V_data_3_V_dout;
        data_247_V_6_fu_228 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_3_fu_356 <= data_stream_V_data_0_V_dout;
        data_243_V_7_fu_272 <= data_stream_V_data_3_V_dout;
        data_247_V_11_fu_288 <= data_stream_V_data_7_V_dout;
        data_249_V_10_fu_296 <= data_stream_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_4_fu_360 <= data_stream_V_data_0_V_dout;
        data_243_V_6_fu_268 <= data_stream_V_data_3_V_dout;
        data_247_V_9_fu_264 <= data_stream_V_data_7_V_dout;
        data_249_V_8_fu_260 <= data_stream_V_data_9_V_dout;
        data_250_V_7_fu_256 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_5_fu_364 <= data_stream_V_data_0_V_dout;
        data_243_V_8_fu_292 <= data_stream_V_data_3_V_dout;
        data_247_V_10_fu_284 <= data_stream_V_data_7_V_dout;
        data_249_V_9_fu_280 <= data_stream_V_data_9_V_dout;
        data_250_V_8_fu_276 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_6_fu_368 <= data_stream_V_data_0_V_dout;
        data_243_V_9_fu_312 <= data_stream_V_data_3_V_dout;
        data_247_V_12_fu_308 <= data_stream_V_data_7_V_dout;
        data_249_V_11_fu_304 <= data_stream_V_data_9_V_dout;
        data_250_V_9_fu_300 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_7_fu_372 <= data_stream_V_data_0_V_dout;
        data_243_V_10_fu_316 <= data_stream_V_data_3_V_dout;
        data_247_V_13_fu_320 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_8_fu_376 <= data_stream_V_data_0_V_dout;
        data_243_V_11_fu_332 <= data_stream_V_data_3_V_dout;
        data_247_V_14_fu_328 <= data_stream_V_data_7_V_dout;
        data_249_V_12_fu_324 <= data_stream_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_9_fu_380 <= data_stream_V_data_0_V_dout;
        data_243_V_12_fu_340 <= data_stream_V_data_3_V_dout;
        data_247_V_15_fu_336 <= data_stream_V_data_7_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_240_V_fu_344 <= data_stream_V_data_0_V_dout;
        data_243_V_fu_136 <= data_stream_V_data_3_V_dout;
        data_247_V_7_fu_236 <= data_stream_V_data_7_V_dout;
        data_249_V_6_fu_240 <= data_stream_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_243_V_1_fu_144 <= data_stream_V_data_3_V_dout;
        data_247_V_1_fu_160 <= data_stream_V_data_7_V_dout;
        data_249_V_1_fu_168 <= data_stream_V_data_9_V_dout;
        data_250_V_2_fu_172 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_243_V_2_fu_156 <= data_stream_V_data_3_V_dout;
        data_247_V_fu_152 <= data_stream_V_data_7_V_dout;
        data_249_V_fu_148 <= data_stream_V_data_9_V_dout;
        data_250_V_fu_140 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_243_V_4_fu_200 <= data_stream_V_data_3_V_dout;
        data_247_V_3_fu_196 <= data_stream_V_data_7_V_dout;
        data_249_V_3_fu_192 <= data_stream_V_data_9_V_dout;
        data_250_V_3_fu_188 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_247_V_4_fu_212 <= data_stream_V_data_7_V_dout;
        data_249_V_4_fu_208 <= data_stream_V_data_9_V_dout;
        data_250_V_4_fu_204 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_247_V_5_fu_220 <= data_stream_V_data_7_V_dout;
        data_249_V_5_fu_224 <= data_stream_V_data_9_V_dout;
        data_250_V_5_fu_216 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln203_reg_1552 == 4'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_247_V_8_fu_252 <= data_stream_V_data_7_V_dout;
        data_249_V_7_fu_248 <= data_stream_V_data_9_V_dout;
        data_250_V_6_fu_244 <= data_stream_V_data_10_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln41_fu_542_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln203_reg_1552 <= trunc_ln203_fu_554_p1;
    end
end

always @ (*) begin
    if ((icmp_ln41_fu_542_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_0_V_blk_n = data_stream_V_data_0_V_empty_n;
    end else begin
        data_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_0_V_read = 1'b1;
    end else begin
        data_stream_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_10_V_blk_n = data_stream_V_data_10_V_empty_n;
    end else begin
        data_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_10_V_read = 1'b1;
    end else begin
        data_stream_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_11_V_blk_n = data_stream_V_data_11_V_empty_n;
    end else begin
        data_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_11_V_read = 1'b1;
    end else begin
        data_stream_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_12_V_blk_n = data_stream_V_data_12_V_empty_n;
    end else begin
        data_stream_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_12_V_read = 1'b1;
    end else begin
        data_stream_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_13_V_blk_n = data_stream_V_data_13_V_empty_n;
    end else begin
        data_stream_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_13_V_read = 1'b1;
    end else begin
        data_stream_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_14_V_blk_n = data_stream_V_data_14_V_empty_n;
    end else begin
        data_stream_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_14_V_read = 1'b1;
    end else begin
        data_stream_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_15_V_blk_n = data_stream_V_data_15_V_empty_n;
    end else begin
        data_stream_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_15_V_read = 1'b1;
    end else begin
        data_stream_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_1_V_blk_n = data_stream_V_data_1_V_empty_n;
    end else begin
        data_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_1_V_read = 1'b1;
    end else begin
        data_stream_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_2_V_blk_n = data_stream_V_data_2_V_empty_n;
    end else begin
        data_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_2_V_read = 1'b1;
    end else begin
        data_stream_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_3_V_blk_n = data_stream_V_data_3_V_empty_n;
    end else begin
        data_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_3_V_read = 1'b1;
    end else begin
        data_stream_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_4_V_blk_n = data_stream_V_data_4_V_empty_n;
    end else begin
        data_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_4_V_read = 1'b1;
    end else begin
        data_stream_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_5_V_blk_n = data_stream_V_data_5_V_empty_n;
    end else begin
        data_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_5_V_read = 1'b1;
    end else begin
        data_stream_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_6_V_blk_n = data_stream_V_data_6_V_empty_n;
    end else begin
        data_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_6_V_read = 1'b1;
    end else begin
        data_stream_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_7_V_blk_n = data_stream_V_data_7_V_empty_n;
    end else begin
        data_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_7_V_read = 1'b1;
    end else begin
        data_stream_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_8_V_blk_n = data_stream_V_data_8_V_empty_n;
    end else begin
        data_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_8_V_read = 1'b1;
    end else begin
        data_stream_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_stream_V_data_9_V_blk_n = data_stream_V_data_9_V_empty_n;
    end else begin
        data_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_stream_V_data_9_V_read = 1'b1;
    end else begin
        data_stream_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_10_V_blk_n = res_stream_V_data_10_V_full_n;
    end else begin
        res_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_10_V_write = 1'b1;
    end else begin
        res_stream_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_11_V_blk_n = res_stream_V_data_11_V_full_n;
    end else begin
        res_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_11_V_write = 1'b1;
    end else begin
        res_stream_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_6_V_blk_n = res_stream_V_data_6_V_full_n;
    end else begin
        res_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_6_V_write = 1'b1;
    end else begin
        res_stream_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_7_V_blk_n = res_stream_V_data_7_V_full_n;
    end else begin
        res_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_7_V_write = 1'b1;
    end else begin
        res_stream_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_8_V_blk_n = res_stream_V_data_8_V_full_n;
    end else begin
        res_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_8_V_write = 1'b1;
    end else begin
        res_stream_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        res_stream_V_data_9_V_blk_n = res_stream_V_data_9_V_full_n;
    end else begin
        res_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        res_stream_V_data_9_V_write = 1'b1;
    end else begin
        res_stream_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln41_fu_542_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln41_fu_542_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if ((~((io_acc_block_signal_op315 == 1'b0) | (grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op170 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op170 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (io_acc_block_signal_op170 == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_start_reg;

assign i_in_fu_548_p2 = (i_in_0_reg_465 + 5'd1);

assign icmp_ln41_fu_542_p2 = ((i_in_0_reg_465 == 5'd16) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op170 = (data_stream_V_data_9_V_empty_n & data_stream_V_data_8_V_empty_n & data_stream_V_data_7_V_empty_n & data_stream_V_data_6_V_empty_n & data_stream_V_data_5_V_empty_n & data_stream_V_data_4_V_empty_n & data_stream_V_data_3_V_empty_n & data_stream_V_data_2_V_empty_n & data_stream_V_data_1_V_empty_n & data_stream_V_data_15_V_empty_n & data_stream_V_data_14_V_empty_n & data_stream_V_data_13_V_empty_n & data_stream_V_data_12_V_empty_n & data_stream_V_data_11_V_empty_n & data_stream_V_data_10_V_empty_n & data_stream_V_data_0_V_empty_n);

assign io_acc_block_signal_op315 = (res_stream_V_data_9_V_full_n & res_stream_V_data_8_V_full_n & res_stream_V_data_7_V_full_n & res_stream_V_data_6_V_full_n & res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_11_V_full_n & res_stream_V_data_10_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = 27'd0;

assign res_stream_V_data_10_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_6;

assign res_stream_V_data_11_V_din = 27'd0;

assign res_stream_V_data_1_V_din = 27'd0;

assign res_stream_V_data_2_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_0;

assign res_stream_V_data_3_V_din = 27'd0;

assign res_stream_V_data_4_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_1;

assign res_stream_V_data_5_V_din = 27'd0;

assign res_stream_V_data_6_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_2;

assign res_stream_V_data_7_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_3;

assign res_stream_V_data_8_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_4;

assign res_stream_V_data_9_V_din = grp_dense_wrapper_ap_fixed_ap_fixed_27_9_5_3_0_config11_s_fu_476_ap_return_5;

assign start_out = real_start;

assign trunc_ln203_fu_554_p1 = i_in_0_reg_465[3:0];

endmodule //dense_array_array_ap_fixed_27_9_5_3_0_12u_config11_s
