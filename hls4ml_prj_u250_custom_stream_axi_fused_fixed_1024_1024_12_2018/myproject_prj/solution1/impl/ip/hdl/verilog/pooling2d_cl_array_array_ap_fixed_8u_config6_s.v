// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_array_ap_fixed_8u_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        data_V_data_6_V_dout,
        data_V_data_6_V_empty_n,
        data_V_data_6_V_read,
        data_V_data_7_V_dout,
        data_V_data_7_V_empty_n,
        data_V_data_7_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write,
        res_V_data_6_V_din,
        res_V_data_6_V_full_n,
        res_V_data_6_V_write,
        res_V_data_7_V_din,
        res_V_data_7_V_full_n,
        res_V_data_7_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [26:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [26:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [26:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [26:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [26:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [26:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
input  [26:0] data_V_data_6_V_dout;
input   data_V_data_6_V_empty_n;
output   data_V_data_6_V_read;
input  [26:0] data_V_data_7_V_dout;
input   data_V_data_7_V_empty_n;
output   data_V_data_7_V_read;
output  [26:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [26:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [26:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [26:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [26:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [26:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;
output  [26:0] res_V_data_6_V_din;
input   res_V_data_6_V_full_n;
output   res_V_data_6_V_write;
output  [26:0] res_V_data_7_V_din;
input   res_V_data_7_V_full_n;
output   res_V_data_7_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg data_V_data_6_V_read;
reg data_V_data_7_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;
reg res_V_data_6_V_write;
reg res_V_data_7_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [31:0] pY;
reg   [31:0] sY;
reg   [26:0] kernel_data_V_3_8;
reg   [26:0] kernel_data_V_3_9;
reg   [26:0] kernel_data_V_3_10;
reg   [26:0] kernel_data_V_3_11;
reg   [26:0] kernel_data_V_3_12;
reg   [26:0] kernel_data_V_3_13;
reg   [26:0] kernel_data_V_3_14;
reg   [26:0] kernel_data_V_3_15;
reg   [26:0] kernel_data_V_3_16;
reg   [26:0] kernel_data_V_3_17;
reg   [26:0] kernel_data_V_3_18;
reg   [26:0] kernel_data_V_3_19;
reg   [26:0] kernel_data_V_3_20;
reg   [26:0] kernel_data_V_3_21;
reg   [26:0] kernel_data_V_3_22;
reg   [26:0] kernel_data_V_3_23;
reg   [26:0] kernel_data_V_3_24;
reg   [26:0] kernel_data_V_3_25;
reg   [26:0] kernel_data_V_3_26;
reg   [26:0] kernel_data_V_3_27;
reg   [26:0] kernel_data_V_3_28;
reg   [26:0] kernel_data_V_3_29;
reg   [26:0] kernel_data_V_3_30;
reg   [26:0] kernel_data_V_3_31;
reg   [26:0] kernel_data_V_3_40;
reg   [26:0] kernel_data_V_3_41;
reg   [26:0] kernel_data_V_3_42;
reg   [26:0] kernel_data_V_3_43;
reg   [26:0] kernel_data_V_3_44;
reg   [26:0] kernel_data_V_3_45;
reg   [26:0] kernel_data_V_3_46;
reg   [26:0] kernel_data_V_3_47;
reg   [26:0] kernel_data_V_3_48;
reg   [26:0] kernel_data_V_3_49;
reg   [26:0] kernel_data_V_3_50;
reg   [26:0] kernel_data_V_3_51;
reg   [26:0] kernel_data_V_3_52;
reg   [26:0] kernel_data_V_3_53;
reg   [26:0] kernel_data_V_3_54;
reg   [26:0] kernel_data_V_3_55;
reg   [26:0] kernel_data_V_3_56;
reg   [26:0] kernel_data_V_3_57;
reg   [26:0] kernel_data_V_3_58;
reg   [26:0] kernel_data_V_3_59;
reg   [26:0] kernel_data_V_3_60;
reg   [26:0] kernel_data_V_3_61;
reg   [26:0] kernel_data_V_3_62;
reg   [26:0] kernel_data_V_3_63;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln233_reg_1492;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    data_V_data_6_V_blk_n;
reg    data_V_data_7_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln185_2_reg_1541;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg    res_V_data_6_V_blk_n;
reg    res_V_data_7_V_blk_n;
reg   [11:0] indvar_flatten_reg_254;
wire   [0:0] icmp_ln233_fu_448_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op28;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    io_acc_block_signal_op244;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln233_reg_1492_pp0_iter1_reg;
wire   [11:0] add_ln233_fu_454_p2;
reg    ap_enable_reg_pp0_iter0;
reg   [26:0] tmp_data_0_V_reg_1501;
reg   [26:0] tmp_data_1_V_reg_1506;
reg   [26:0] tmp_data_2_V_reg_1511;
reg   [26:0] tmp_data_3_V_reg_1516;
reg   [26:0] tmp_data_4_V_reg_1521;
reg   [26:0] tmp_data_5_V_reg_1526;
reg   [26:0] tmp_data_6_V_reg_1531;
reg   [26:0] tmp_data_7_V_reg_1536;
wire   [0:0] and_ln185_2_fu_1392_p2;
wire   [26:0] tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return;
reg   [26:0] tmp_data_0_V_1_reg_1545;
wire   [26:0] tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return;
reg   [26:0] tmp_data_1_V_1_reg_1550;
wire   [26:0] tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return;
reg   [26:0] tmp_data_2_V_1_reg_1555;
wire   [26:0] tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return;
reg   [26:0] tmp_data_3_V_1_reg_1560;
wire   [26:0] tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return;
reg   [26:0] tmp_data_4_V_1_reg_1565;
wire   [26:0] tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return;
reg   [26:0] tmp_data_5_V_1_reg_1570;
wire   [26:0] tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return;
reg   [26:0] tmp_data_6_V_1_reg_1575;
wire   [26:0] tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return;
reg   [26:0] tmp_data_7_V_1_reg_1580;
wire   [0:0] icmp_ln203_fu_1398_p2;
reg   [0:0] icmp_ln203_reg_1585;
wire   [0:0] icmp_ln207_fu_1448_p2;
wire   [31:0] select_ln213_fu_1472_p3;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_ready;
wire    tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_ready;
wire    tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_ready;
wire    tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_ready;
wire    tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_ready;
wire    tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_ready;
wire    tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_ready;
wire    tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_ready;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62;
wire   [26:0] call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63;
reg    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call62;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call62;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call62;
reg    ap_block_state5_pp0_stage0_iter3_ignore_call62;
reg    ap_block_pp0_stage0_11001_ignoreCallOp90;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265;
reg   [31:0] ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265;
reg    call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg;
wire   [31:0] add_ln216_fu_1404_p2;
wire   [31:0] select_ln218_fu_1422_p3;
wire   [31:0] add_ln211_fu_1454_p2;
reg   [31:0] ap_sig_allocacmp_sY_load;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln185_fu_1344_p2;
wire   [0:0] icmp_ln185_1_fu_1354_p2;
wire   [0:0] icmp_ln185_2_fu_1364_p2;
wire   [0:0] icmp_ln185_3_fu_1374_p2;
wire   [0:0] and_ln185_1_fu_1386_p2;
wire   [0:0] and_ln185_fu_1380_p2;
wire   [31:0] add_ln218_fu_1416_p2;
wire   [31:0] add_ln213_fu_1466_p2;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_277;
reg    ap_condition_526;
reg    ap_condition_5168;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 pY = 32'd0;
#0 sY = 32'd0;
#0 kernel_data_V_3_8 = 27'd0;
#0 kernel_data_V_3_9 = 27'd0;
#0 kernel_data_V_3_10 = 27'd0;
#0 kernel_data_V_3_11 = 27'd0;
#0 kernel_data_V_3_12 = 27'd0;
#0 kernel_data_V_3_13 = 27'd0;
#0 kernel_data_V_3_14 = 27'd0;
#0 kernel_data_V_3_15 = 27'd0;
#0 kernel_data_V_3_16 = 27'd0;
#0 kernel_data_V_3_17 = 27'd0;
#0 kernel_data_V_3_18 = 27'd0;
#0 kernel_data_V_3_19 = 27'd0;
#0 kernel_data_V_3_20 = 27'd0;
#0 kernel_data_V_3_21 = 27'd0;
#0 kernel_data_V_3_22 = 27'd0;
#0 kernel_data_V_3_23 = 27'd0;
#0 kernel_data_V_3_24 = 27'd0;
#0 kernel_data_V_3_25 = 27'd0;
#0 kernel_data_V_3_26 = 27'd0;
#0 kernel_data_V_3_27 = 27'd0;
#0 kernel_data_V_3_28 = 27'd0;
#0 kernel_data_V_3_29 = 27'd0;
#0 kernel_data_V_3_30 = 27'd0;
#0 kernel_data_V_3_31 = 27'd0;
#0 kernel_data_V_3_40 = 27'd0;
#0 kernel_data_V_3_41 = 27'd0;
#0 kernel_data_V_3_42 = 27'd0;
#0 kernel_data_V_3_43 = 27'd0;
#0 kernel_data_V_3_44 = 27'd0;
#0 kernel_data_V_3_45 = 27'd0;
#0 kernel_data_V_3_46 = 27'd0;
#0 kernel_data_V_3_47 = 27'd0;
#0 kernel_data_V_3_48 = 27'd0;
#0 kernel_data_V_3_49 = 27'd0;
#0 kernel_data_V_3_50 = 27'd0;
#0 kernel_data_V_3_51 = 27'd0;
#0 kernel_data_V_3_52 = 27'd0;
#0 kernel_data_V_3_53 = 27'd0;
#0 kernel_data_V_3_54 = 27'd0;
#0 kernel_data_V_3_55 = 27'd0;
#0 kernel_data_V_3_56 = 27'd0;
#0 kernel_data_V_3_57 = 27'd0;
#0 kernel_data_V_3_58 = 27'd0;
#0 kernel_data_V_3_59 = 27'd0;
#0 kernel_data_V_3_60 = 27'd0;
#0 kernel_data_V_3_61 = 27'd0;
#0 kernel_data_V_3_62 = 27'd0;
#0 kernel_data_V_3_63 = 27'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg = 1'b0;
end

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276(
    .ap_ready(tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56),
    .ap_return(tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288(
    .ap_ready(tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57),
    .ap_return(tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300(
    .ap_ready(tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58),
    .ap_return(tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312(
    .ap_ready(tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59),
    .ap_return(tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324(
    .ap_ready(tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60),
    .ap_return(tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336(
    .ap_ready(tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61),
    .ap_return(tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348(
    .ap_ready(tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62),
    .ap_return(tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return)
);

reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360(
    .ap_ready(tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_ready),
    .x_0_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7),
    .x_1_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23),
    .x_2_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31),
    .x_3_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39),
    .x_4_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15),
    .x_5_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47),
    .x_6_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55),
    .x_7_V_read(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63),
    .ap_return(tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return)
);

shift_line_buffer_array_ap_fixed_8u_config6_s call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready),
    .in_elem_data_0_V_read(tmp_data_0_V_reg_1501),
    .in_elem_data_1_V_read(tmp_data_1_V_reg_1506),
    .in_elem_data_2_V_read(tmp_data_2_V_reg_1511),
    .in_elem_data_3_V_read(tmp_data_3_V_reg_1516),
    .in_elem_data_4_V_read(tmp_data_4_V_reg_1521),
    .in_elem_data_5_V_read(tmp_data_5_V_reg_1526),
    .in_elem_data_6_V_read(tmp_data_6_V_reg_1531),
    .in_elem_data_7_V_read(tmp_data_7_V_reg_1536),
    .kernel_window_8_V_read(kernel_data_V_3_8),
    .kernel_window_9_V_read(kernel_data_V_3_9),
    .kernel_window_10_V_read(kernel_data_V_3_10),
    .kernel_window_11_V_read(kernel_data_V_3_11),
    .kernel_window_12_V_read(kernel_data_V_3_12),
    .kernel_window_13_V_read(kernel_data_V_3_13),
    .kernel_window_14_V_read(kernel_data_V_3_14),
    .kernel_window_15_V_read(kernel_data_V_3_15),
    .kernel_window_16_V_read(kernel_data_V_3_16),
    .kernel_window_17_V_read(kernel_data_V_3_17),
    .kernel_window_18_V_read(kernel_data_V_3_18),
    .kernel_window_19_V_read(kernel_data_V_3_19),
    .kernel_window_20_V_read(kernel_data_V_3_20),
    .kernel_window_21_V_read(kernel_data_V_3_21),
    .kernel_window_22_V_read(kernel_data_V_3_22),
    .kernel_window_23_V_read(kernel_data_V_3_23),
    .kernel_window_24_V_read(kernel_data_V_3_24),
    .kernel_window_25_V_read(kernel_data_V_3_25),
    .kernel_window_26_V_read(kernel_data_V_3_26),
    .kernel_window_27_V_read(kernel_data_V_3_27),
    .kernel_window_28_V_read(kernel_data_V_3_28),
    .kernel_window_29_V_read(kernel_data_V_3_29),
    .kernel_window_30_V_read(kernel_data_V_3_30),
    .kernel_window_31_V_read(kernel_data_V_3_31),
    .kernel_window_40_V_read(kernel_data_V_3_40),
    .kernel_window_41_V_read(kernel_data_V_3_41),
    .kernel_window_42_V_read(kernel_data_V_3_42),
    .kernel_window_43_V_read(kernel_data_V_3_43),
    .kernel_window_44_V_read(kernel_data_V_3_44),
    .kernel_window_45_V_read(kernel_data_V_3_45),
    .kernel_window_46_V_read(kernel_data_V_3_46),
    .kernel_window_47_V_read(kernel_data_V_3_47),
    .kernel_window_48_V_read(kernel_data_V_3_48),
    .kernel_window_49_V_read(kernel_data_V_3_49),
    .kernel_window_50_V_read(kernel_data_V_3_50),
    .kernel_window_51_V_read(kernel_data_V_3_51),
    .kernel_window_52_V_read(kernel_data_V_3_52),
    .kernel_window_53_V_read(kernel_data_V_3_53),
    .kernel_window_54_V_read(kernel_data_V_3_54),
    .kernel_window_55_V_read(kernel_data_V_3_55),
    .kernel_window_56_V_read(kernel_data_V_3_56),
    .kernel_window_57_V_read(kernel_data_V_3_57),
    .kernel_window_58_V_read(kernel_data_V_3_58),
    .kernel_window_59_V_read(kernel_data_V_3_59),
    .kernel_window_60_V_read(kernel_data_V_3_60),
    .kernel_window_61_V_read(kernel_data_V_3_61),
    .kernel_window_62_V_read(kernel_data_V_3_62),
    .kernel_window_63_V_read(kernel_data_V_3_63),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_8),
    .ap_return_9(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_9),
    .ap_return_10(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_10),
    .ap_return_11(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_11),
    .ap_return_12(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_12),
    .ap_return_13(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_13),
    .ap_return_14(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_14),
    .ap_return_15(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_15),
    .ap_return_16(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16),
    .ap_return_17(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17),
    .ap_return_18(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18),
    .ap_return_19(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19),
    .ap_return_20(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20),
    .ap_return_21(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21),
    .ap_return_22(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22),
    .ap_return_23(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23),
    .ap_return_24(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24),
    .ap_return_25(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25),
    .ap_return_26(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26),
    .ap_return_27(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27),
    .ap_return_28(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28),
    .ap_return_29(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29),
    .ap_return_30(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30),
    .ap_return_31(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31),
    .ap_return_32(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32),
    .ap_return_33(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33),
    .ap_return_34(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34),
    .ap_return_35(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35),
    .ap_return_36(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36),
    .ap_return_37(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37),
    .ap_return_38(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38),
    .ap_return_39(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39),
    .ap_return_40(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40),
    .ap_return_41(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41),
    .ap_return_42(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42),
    .ap_return_43(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43),
    .ap_return_44(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44),
    .ap_return_45(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45),
    .ap_return_46(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46),
    .ap_return_47(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47),
    .ap_return_48(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48),
    .ap_return_49(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49),
    .ap_return_50(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50),
    .ap_return_51(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51),
    .ap_return_52(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52),
    .ap_return_53(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53),
    .ap_return_54(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54),
    .ap_return_55(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55),
    .ap_return_56(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56),
    .ap_return_57(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57),
    .ap_return_58(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58),
    .ap_return_59(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59),
    .ap_return_60(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60),
    .ap_return_61(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61),
    .ap_return_62(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62),
    .ap_return_63(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
            call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((1'b1 == ap_condition_526)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= 32'd0;
        end else if ((1'b1 == ap_condition_277)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= select_ln213_fu_1472_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_fu_448_p2 == 1'd0))) begin
        indvar_flatten_reg_254 <= add_ln233_fu_454_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_254 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((icmp_ln203_fu_1398_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln203_fu_1398_p2 == 1'd0)) begin
            pX <= add_ln216_fu_1404_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_5168)) begin
        if ((icmp_ln207_fu_1448_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln207_fu_1448_p2 == 1'd0)) begin
            pY <= add_ln211_fu_1454_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((icmp_ln203_fu_1398_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln203_fu_1398_p2 == 1'd0)) begin
            sX <= select_ln218_fu_1422_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln233_reg_1492_pp0_iter1_reg == 1'd0))) begin
        and_ln185_2_reg_1541 <= and_ln185_2_fu_1392_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_storemerge_i_i_reg_265 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln203_reg_1585 <= icmp_ln203_fu_1398_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln233_reg_1492 <= icmp_ln233_fu_448_p2;
        icmp_ln233_reg_1492_pp0_iter1_reg <= icmp_ln233_reg_1492;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln233_reg_1492_pp0_iter1_reg == 1'd0))) begin
        kernel_data_V_3_10 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_18;
        kernel_data_V_3_11 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_19;
        kernel_data_V_3_12 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_20;
        kernel_data_V_3_13 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_21;
        kernel_data_V_3_14 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_22;
        kernel_data_V_3_15 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_23;
        kernel_data_V_3_16 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_24;
        kernel_data_V_3_17 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_25;
        kernel_data_V_3_18 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_26;
        kernel_data_V_3_19 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_27;
        kernel_data_V_3_20 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_28;
        kernel_data_V_3_21 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_29;
        kernel_data_V_3_22 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_30;
        kernel_data_V_3_23 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_31;
        kernel_data_V_3_24 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_32;
        kernel_data_V_3_25 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_33;
        kernel_data_V_3_26 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_34;
        kernel_data_V_3_27 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_35;
        kernel_data_V_3_28 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_36;
        kernel_data_V_3_29 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_37;
        kernel_data_V_3_30 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_38;
        kernel_data_V_3_31 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_39;
        kernel_data_V_3_40 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_40;
        kernel_data_V_3_41 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_41;
        kernel_data_V_3_42 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_42;
        kernel_data_V_3_43 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_43;
        kernel_data_V_3_44 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_44;
        kernel_data_V_3_45 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_45;
        kernel_data_V_3_46 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_46;
        kernel_data_V_3_47 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_47;
        kernel_data_V_3_48 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_48;
        kernel_data_V_3_49 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_49;
        kernel_data_V_3_50 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_50;
        kernel_data_V_3_51 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_51;
        kernel_data_V_3_52 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_52;
        kernel_data_V_3_53 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_53;
        kernel_data_V_3_54 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_54;
        kernel_data_V_3_55 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_55;
        kernel_data_V_3_56 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_56;
        kernel_data_V_3_57 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_57;
        kernel_data_V_3_58 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_58;
        kernel_data_V_3_59 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_59;
        kernel_data_V_3_60 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_60;
        kernel_data_V_3_61 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_61;
        kernel_data_V_3_62 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_62;
        kernel_data_V_3_63 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_63;
        kernel_data_V_3_8 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_16;
        kernel_data_V_3_9 <= call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_return_17;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln203_reg_1585 == 1'd1))) begin
        sY <= ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_2_fu_1392_p2))) begin
        tmp_data_0_V_1_reg_1545 <= tmp_data_0_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_276_ap_return;
        tmp_data_1_V_1_reg_1550 <= tmp_data_1_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_288_ap_return;
        tmp_data_2_V_1_reg_1555 <= tmp_data_2_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_300_ap_return;
        tmp_data_3_V_1_reg_1560 <= tmp_data_3_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_312_ap_return;
        tmp_data_4_V_1_reg_1565 <= tmp_data_4_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_324_ap_return;
        tmp_data_5_V_1_reg_1570 <= tmp_data_5_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_336_ap_return;
        tmp_data_6_V_1_reg_1575 <= tmp_data_6_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_348_ap_return;
        tmp_data_7_V_1_reg_1580 <= tmp_data_7_V_1_reduce_ap_fixed_8_Op_max_ap_fixed_27_9_4_0_0_s_fu_360_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        tmp_data_0_V_reg_1501 <= data_V_data_0_V_dout;
        tmp_data_1_V_reg_1506 <= data_V_data_1_V_dout;
        tmp_data_2_V_reg_1511 <= data_V_data_2_V_dout;
        tmp_data_3_V_reg_1516 <= data_V_data_3_V_dout;
        tmp_data_4_V_reg_1521 <= data_V_data_4_V_dout;
        tmp_data_5_V_reg_1526 <= data_V_data_5_V_dout;
        tmp_data_6_V_reg_1531 <= data_V_data_6_V_dout;
        tmp_data_7_V_reg_1536 <= data_V_data_7_V_dout;
    end
end

always @ (*) begin
    if ((icmp_ln233_fu_448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln203_reg_1585 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_sY_load = ap_phi_reg_pp0_iter3_storemerge_i_i_reg_265;
    end else begin
        ap_sig_allocacmp_sY_load = sY;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp90) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_6_V_blk_n = data_V_data_6_V_empty_n;
    end else begin
        data_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_6_V_read = 1'b1;
    end else begin
        data_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_V_data_7_V_blk_n = data_V_data_7_V_empty_n;
    end else begin
        data_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln233_reg_1492 == 1'd0))) begin
        data_V_data_7_V_read = 1'b1;
    end else begin
        data_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_6_V_blk_n = res_V_data_6_V_full_n;
    end else begin
        res_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_6_V_write = 1'b1;
    end else begin
        res_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541) & (1'b0 == ap_block_pp0_stage0))) begin
        res_V_data_7_V_blk_n = res_V_data_7_V_full_n;
    end else begin
        res_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541))) begin
        res_V_data_7_V_write = 1'b1;
    end else begin
        res_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln233_fu_448_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln211_fu_1454_p2 = (pY + 32'd1);

assign add_ln213_fu_1466_p2 = (ap_sig_allocacmp_sY_load + 32'd1);

assign add_ln216_fu_1404_p2 = (pX + 32'd1);

assign add_ln218_fu_1416_p2 = (sX + 32'd1);

assign add_ln233_fu_454_p2 = (indvar_flatten_reg_254 + 12'd1);

assign and_ln185_1_fu_1386_p2 = (icmp_ln185_3_fu_1374_p2 & icmp_ln185_2_fu_1364_p2);

assign and_ln185_2_fu_1392_p2 = (and_ln185_fu_1380_p2 & and_ln185_1_fu_1386_p2);

assign and_ln185_fu_1380_p2 = (icmp_ln185_fu_1344_p2 & icmp_ln185_1_fu_1354_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((io_acc_block_signal_op244 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln233_reg_1492 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((io_acc_block_signal_op244 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln233_reg_1492 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp90 = (((io_acc_block_signal_op244 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln233_reg_1492 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((io_acc_block_signal_op244 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd1 == and_ln185_2_reg_1541)) | ((io_acc_block_signal_op28 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln233_reg_1492 == 1'd0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call62 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((io_acc_block_signal_op28 == 1'b0) & (icmp_ln233_reg_1492 == 1'd0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call62 = ((io_acc_block_signal_op28 == 1'b0) & (icmp_ln233_reg_1492 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call62 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((io_acc_block_signal_op244 == 1'b0) & (1'd1 == and_ln185_2_reg_1541));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3_ignore_call62 = ((io_acc_block_signal_op244 == 1'b0) & (1'd1 == and_ln185_2_reg_1541));
end

always @ (*) begin
    ap_condition_277 = ((icmp_ln203_fu_1398_p2 == 1'd1) & (icmp_ln207_fu_1448_p2 == 1'd0) & (icmp_ln233_reg_1492_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_5168 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln203_fu_1398_p2 == 1'd1) & (icmp_ln233_reg_1492_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_526 = ((icmp_ln207_fu_1448_p2 == 1'd1) & (icmp_ln203_fu_1398_p2 == 1'd1) & (icmp_ln233_reg_1492_pp0_iter1_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_265 = 'bx;

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start = call_ret_shift_line_buffer_array_ap_fixed_8u_config6_s_fu_372_ap_start_reg;

assign icmp_ln185_1_fu_1354_p2 = ((ap_sig_allocacmp_sY_load == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln185_2_fu_1364_p2 = (($signed(pY) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln185_3_fu_1374_p2 = (($signed(pX) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_1344_p2 = ((sX == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1398_p2 = ((pX == 32'd63) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_1448_p2 = ((pY == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_448_p2 = ((indvar_flatten_reg_254 == 12'd2048) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op244 = (res_V_data_7_V_full_n & res_V_data_6_V_full_n & res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign io_acc_block_signal_op28 = (data_V_data_7_V_empty_n & data_V_data_6_V_empty_n & data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign res_V_data_0_V_din = tmp_data_0_V_1_reg_1545;

assign res_V_data_1_V_din = tmp_data_1_V_1_reg_1550;

assign res_V_data_2_V_din = tmp_data_2_V_1_reg_1555;

assign res_V_data_3_V_din = tmp_data_3_V_1_reg_1560;

assign res_V_data_4_V_din = tmp_data_4_V_1_reg_1565;

assign res_V_data_5_V_din = tmp_data_5_V_1_reg_1570;

assign res_V_data_6_V_din = tmp_data_6_V_1_reg_1575;

assign res_V_data_7_V_din = tmp_data_7_V_1_reg_1580;

assign select_ln213_fu_1472_p3 = ((icmp_ln185_1_fu_1354_p2[0:0] === 1'b1) ? 32'd0 : add_ln213_fu_1466_p2);

assign select_ln218_fu_1422_p3 = ((icmp_ln185_fu_1344_p2[0:0] === 1'b1) ? 32'd0 : add_ln218_fu_1416_p2);

assign start_out = real_start;

endmodule //pooling2d_cl_array_array_ap_fixed_8u_config6_s
