// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s (
        ap_clk,
        ap_rst,
        x_0_V_read,
        x_1_V_read,
        x_2_V_read,
        x_3_V_read,
        x_4_V_read,
        x_5_V_read,
        x_6_V_read,
        x_7_V_read,
        x_8_V_read,
        x_9_V_read,
        x_10_V_read,
        x_11_V_read,
        x_12_V_read,
        x_13_V_read,
        x_14_V_read,
        x_15_V_read,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [26:0] x_0_V_read;
input  [26:0] x_1_V_read;
input  [26:0] x_2_V_read;
input  [26:0] x_3_V_read;
input  [26:0] x_4_V_read;
input  [26:0] x_5_V_read;
input  [26:0] x_6_V_read;
input  [26:0] x_7_V_read;
input  [26:0] x_8_V_read;
input  [26:0] x_9_V_read;
input  [26:0] x_10_V_read;
input  [26:0] x_11_V_read;
input  [26:0] x_12_V_read;
input  [26:0] x_13_V_read;
input  [26:0] x_14_V_read;
input  [26:0] x_15_V_read;
output  [26:0] ap_return;
input   ap_ce;

reg[26:0] ap_return;

wire   [26:0] select_ln86_12_fu_220_p3;
reg   [26:0] select_ln86_12_reg_336;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [26:0] select_ln86_19_fu_318_p3;
reg   [26:0] select_ln86_19_reg_342;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln1496_fu_130_p2;
wire   [0:0] icmp_ln1496_7_fu_144_p2;
wire   [26:0] select_ln86_fu_136_p3;
wire   [26:0] select_ln86_7_fu_150_p3;
wire   [0:0] icmp_ln1496_8_fu_158_p2;
wire   [0:0] icmp_ln1496_9_fu_172_p2;
wire   [0:0] icmp_ln1496_10_fu_186_p2;
wire   [26:0] select_ln86_9_fu_178_p3;
wire   [26:0] select_ln86_10_fu_192_p3;
wire   [0:0] icmp_ln1496_11_fu_200_p2;
wire   [26:0] select_ln86_8_fu_164_p3;
wire   [26:0] select_ln86_11_fu_206_p3;
wire   [0:0] icmp_ln1496_12_fu_214_p2;
wire   [0:0] icmp_ln1496_13_fu_228_p2;
wire   [0:0] icmp_ln1496_14_fu_242_p2;
wire   [26:0] select_ln86_13_fu_234_p3;
wire   [26:0] select_ln86_14_fu_248_p3;
wire   [0:0] icmp_ln1496_15_fu_256_p2;
wire   [0:0] icmp_ln1496_16_fu_270_p2;
wire   [0:0] icmp_ln1496_17_fu_284_p2;
wire   [26:0] select_ln86_16_fu_276_p3;
wire   [26:0] select_ln86_17_fu_290_p3;
wire   [0:0] icmp_ln1496_18_fu_298_p2;
wire   [26:0] select_ln86_15_fu_262_p3;
wire   [26:0] select_ln86_18_fu_304_p3;
wire   [0:0] icmp_ln1496_19_fu_312_p2;
wire   [0:0] icmp_ln1496_20_fu_326_p2;
wire   [26:0] select_ln86_20_fu_330_p3;
reg    ap_ce_reg;
reg   [26:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln86_20_fu_330_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        select_ln86_12_reg_336 <= select_ln86_12_fu_220_p3;
        select_ln86_19_reg_342 <= select_ln86_19_fu_318_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln86_20_fu_330_p3;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign icmp_ln1496_10_fu_186_p2 = (($signed(x_6_V_read) < $signed(x_7_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_200_p2 = (($signed(select_ln86_9_fu_178_p3) < $signed(select_ln86_10_fu_192_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_214_p2 = (($signed(select_ln86_8_fu_164_p3) < $signed(select_ln86_11_fu_206_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_228_p2 = (($signed(x_8_V_read) < $signed(x_9_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_242_p2 = (($signed(x_10_V_read) < $signed(x_11_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_15_fu_256_p2 = (($signed(select_ln86_13_fu_234_p3) < $signed(select_ln86_14_fu_248_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_16_fu_270_p2 = (($signed(x_12_V_read) < $signed(x_13_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_17_fu_284_p2 = (($signed(x_14_V_read) < $signed(x_15_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_18_fu_298_p2 = (($signed(select_ln86_16_fu_276_p3) < $signed(select_ln86_17_fu_290_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_19_fu_312_p2 = (($signed(select_ln86_15_fu_262_p3) < $signed(select_ln86_18_fu_304_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_20_fu_326_p2 = (($signed(select_ln86_12_reg_336) < $signed(select_ln86_19_reg_342)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_144_p2 = (($signed(x_2_V_read) < $signed(x_3_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_158_p2 = (($signed(select_ln86_fu_136_p3) < $signed(select_ln86_7_fu_150_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_172_p2 = (($signed(x_4_V_read) < $signed(x_5_V_read)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_130_p2 = (($signed(x_0_V_read) < $signed(x_1_V_read)) ? 1'b1 : 1'b0);

assign select_ln86_10_fu_192_p3 = ((icmp_ln1496_10_fu_186_p2[0:0] === 1'b1) ? x_7_V_read : x_6_V_read);

assign select_ln86_11_fu_206_p3 = ((icmp_ln1496_11_fu_200_p2[0:0] === 1'b1) ? select_ln86_10_fu_192_p3 : select_ln86_9_fu_178_p3);

assign select_ln86_12_fu_220_p3 = ((icmp_ln1496_12_fu_214_p2[0:0] === 1'b1) ? select_ln86_11_fu_206_p3 : select_ln86_8_fu_164_p3);

assign select_ln86_13_fu_234_p3 = ((icmp_ln1496_13_fu_228_p2[0:0] === 1'b1) ? x_9_V_read : x_8_V_read);

assign select_ln86_14_fu_248_p3 = ((icmp_ln1496_14_fu_242_p2[0:0] === 1'b1) ? x_11_V_read : x_10_V_read);

assign select_ln86_15_fu_262_p3 = ((icmp_ln1496_15_fu_256_p2[0:0] === 1'b1) ? select_ln86_14_fu_248_p3 : select_ln86_13_fu_234_p3);

assign select_ln86_16_fu_276_p3 = ((icmp_ln1496_16_fu_270_p2[0:0] === 1'b1) ? x_13_V_read : x_12_V_read);

assign select_ln86_17_fu_290_p3 = ((icmp_ln1496_17_fu_284_p2[0:0] === 1'b1) ? x_15_V_read : x_14_V_read);

assign select_ln86_18_fu_304_p3 = ((icmp_ln1496_18_fu_298_p2[0:0] === 1'b1) ? select_ln86_17_fu_290_p3 : select_ln86_16_fu_276_p3);

assign select_ln86_19_fu_318_p3 = ((icmp_ln1496_19_fu_312_p2[0:0] === 1'b1) ? select_ln86_18_fu_304_p3 : select_ln86_15_fu_262_p3);

assign select_ln86_20_fu_330_p3 = ((icmp_ln1496_20_fu_326_p2[0:0] === 1'b1) ? select_ln86_19_reg_342 : select_ln86_12_reg_336);

assign select_ln86_7_fu_150_p3 = ((icmp_ln1496_7_fu_144_p2[0:0] === 1'b1) ? x_3_V_read : x_2_V_read);

assign select_ln86_8_fu_164_p3 = ((icmp_ln1496_8_fu_158_p2[0:0] === 1'b1) ? select_ln86_7_fu_150_p3 : select_ln86_fu_136_p3);

assign select_ln86_9_fu_178_p3 = ((icmp_ln1496_9_fu_172_p2[0:0] === 1'b1) ? x_5_V_read : x_4_V_read);

assign select_ln86_fu_136_p3 = ((icmp_ln1496_fu_130_p2[0:0] === 1'b1) ? x_1_V_read : x_0_V_read);

endmodule //reduce_ap_fixed_16_Op_max_ap_fixed_27_9_4_0_0_s
